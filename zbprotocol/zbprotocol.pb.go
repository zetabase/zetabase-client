// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zbprotocol.proto

package zbprotocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TableDataFormat int32

const (
	TableDataFormat_BINARY     TableDataFormat = 0
	TableDataFormat_PLAIN_TEXT TableDataFormat = 1
	TableDataFormat_JSON       TableDataFormat = 2
)

var TableDataFormat_name = map[int32]string{
	0: "BINARY",
	1: "PLAIN_TEXT",
	2: "JSON",
}

var TableDataFormat_value = map[string]int32{
	"BINARY":     0,
	"PLAIN_TEXT": 1,
	"JSON":       2,
}

func (x TableDataFormat) String() string {
	return proto.EnumName(TableDataFormat_name, int32(x))
}

func (TableDataFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{0}
}

type PermissionConstraintType int32

const (
	PermissionConstraintType_FIELD       PermissionConstraintType = 0
	PermissionConstraintType_KEY_PATTERN PermissionConstraintType = 1
)

var PermissionConstraintType_name = map[int32]string{
	0: "FIELD",
	1: "KEY_PATTERN",
}

var PermissionConstraintType_value = map[string]int32{
	"FIELD":       0,
	"KEY_PATTERN": 1,
}

func (x PermissionConstraintType) String() string {
	return proto.EnumName(PermissionConstraintType_name, int32(x))
}

func (PermissionConstraintType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{1}
}

type FieldConstraintType int32

const (
	FieldConstraintType_EQUALS_VALUE FieldConstraintType = 0
	FieldConstraintType_SET_VALUE    FieldConstraintType = 1
)

var FieldConstraintType_name = map[int32]string{
	0: "EQUALS_VALUE",
	1: "SET_VALUE",
}

var FieldConstraintType_value = map[string]int32{
	"EQUALS_VALUE": 0,
	"SET_VALUE":    1,
}

func (x FieldConstraintType) String() string {
	return proto.EnumName(FieldConstraintType_name, int32(x))
}

func (FieldConstraintType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{2}
}

type FieldConstraintValueType int32

const (
	FieldConstraintValueType_CONSTANT      FieldConstraintValueType = 0
	FieldConstraintValueType_UID           FieldConstraintValueType = 1
	FieldConstraintValueType_TIMESTAMP     FieldConstraintValueType = 2
	FieldConstraintValueType_NATURAL_ORDER FieldConstraintValueType = 3
	FieldConstraintValueType_RANDOM        FieldConstraintValueType = 4
)

var FieldConstraintValueType_name = map[int32]string{
	0: "CONSTANT",
	1: "UID",
	2: "TIMESTAMP",
	3: "NATURAL_ORDER",
	4: "RANDOM",
}

var FieldConstraintValueType_value = map[string]int32{
	"CONSTANT":      0,
	"UID":           1,
	"TIMESTAMP":     2,
	"NATURAL_ORDER": 3,
	"RANDOM":        4,
}

func (x FieldConstraintValueType) String() string {
	return proto.EnumName(FieldConstraintValueType_name, int32(x))
}

func (FieldConstraintValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{3}
}

type PermissionAudienceType int32

const (
	PermissionAudienceType_INDIVIDUAL PermissionAudienceType = 0
	PermissionAudienceType_USER       PermissionAudienceType = 1
	PermissionAudienceType_PUBLIC     PermissionAudienceType = 2
)

var PermissionAudienceType_name = map[int32]string{
	0: "INDIVIDUAL",
	1: "USER",
	2: "PUBLIC",
}

var PermissionAudienceType_value = map[string]int32{
	"INDIVIDUAL": 0,
	"USER":       1,
	"PUBLIC":     2,
}

func (x PermissionAudienceType) String() string {
	return proto.EnumName(PermissionAudienceType_name, int32(x))
}

func (PermissionAudienceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{4}
}

type PermissionLevel int32

const (
	PermissionLevel_NONE       PermissionLevel = 0
	PermissionLevel_READ       PermissionLevel = 1
	PermissionLevel_APPEND     PermissionLevel = 2
	PermissionLevel_DELETE     PermissionLevel = 3
	PermissionLevel_ADMINISTER PermissionLevel = 4
)

var PermissionLevel_name = map[int32]string{
	0: "NONE",
	1: "READ",
	2: "APPEND",
	3: "DELETE",
	4: "ADMINISTER",
}

var PermissionLevel_value = map[string]int32{
	"NONE":       0,
	"READ":       1,
	"APPEND":     2,
	"DELETE":     3,
	"ADMINISTER": 4,
}

func (x PermissionLevel) String() string {
	return proto.EnumName(PermissionLevel_name, int32(x))
}

func (PermissionLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{5}
}

type CredentialProofType int32

const (
	CredentialProofType_SIGNATURE CredentialProofType = 0
	CredentialProofType_JWT_TOKEN CredentialProofType = 1
)

var CredentialProofType_name = map[int32]string{
	0: "SIGNATURE",
	1: "JWT_TOKEN",
}

var CredentialProofType_value = map[string]int32{
	"SIGNATURE": 0,
	"JWT_TOKEN": 1,
}

func (x CredentialProofType) String() string {
	return proto.EnumName(CredentialProofType_name, int32(x))
}

func (CredentialProofType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{6}
}

type QueryOperator int32

const (
	QueryOperator_EQUALS          QueryOperator = 0
	QueryOperator_GREATER_THAN    QueryOperator = 1
	QueryOperator_LESS_THAN       QueryOperator = 2
	QueryOperator_NOT_EQUALS      QueryOperator = 3
	QueryOperator_GREATER_THAN_EQ QueryOperator = 4
	QueryOperator_LESS_THAN_EQ    QueryOperator = 5
	QueryOperator_TEXT_SEARCH     QueryOperator = 6
)

var QueryOperator_name = map[int32]string{
	0: "EQUALS",
	1: "GREATER_THAN",
	2: "LESS_THAN",
	3: "NOT_EQUALS",
	4: "GREATER_THAN_EQ",
	5: "LESS_THAN_EQ",
	6: "TEXT_SEARCH",
}

var QueryOperator_value = map[string]int32{
	"EQUALS":          0,
	"GREATER_THAN":    1,
	"LESS_THAN":       2,
	"NOT_EQUALS":      3,
	"GREATER_THAN_EQ": 4,
	"LESS_THAN_EQ":    5,
	"TEXT_SEARCH":     6,
}

func (x QueryOperator) String() string {
	return proto.EnumName(QueryOperator_name, int32(x))
}

func (QueryOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{7}
}

type QueryLogicalOperator int32

const (
	QueryLogicalOperator_LOGICAL_OR  QueryLogicalOperator = 0
	QueryLogicalOperator_LOGICAL_AND QueryLogicalOperator = 1
)

var QueryLogicalOperator_name = map[int32]string{
	0: "LOGICAL_OR",
	1: "LOGICAL_AND",
}

var QueryLogicalOperator_value = map[string]int32{
	"LOGICAL_OR":  0,
	"LOGICAL_AND": 1,
}

func (x QueryLogicalOperator) String() string {
	return proto.EnumName(QueryLogicalOperator_name, int32(x))
}

func (QueryLogicalOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{8}
}

type QueryOrdering int32

const (
	QueryOrdering_LEXICOGRAPHIC    QueryOrdering = 0
	QueryOrdering_REAL_NUMBERS     QueryOrdering = 1
	QueryOrdering_INTEGRAL_NUMBERS QueryOrdering = 2
	QueryOrdering_FULL_TEXT        QueryOrdering = 3
)

var QueryOrdering_name = map[int32]string{
	0: "LEXICOGRAPHIC",
	1: "REAL_NUMBERS",
	2: "INTEGRAL_NUMBERS",
	3: "FULL_TEXT",
}

var QueryOrdering_value = map[string]int32{
	"LEXICOGRAPHIC":    0,
	"REAL_NUMBERS":     1,
	"INTEGRAL_NUMBERS": 2,
	"FULL_TEXT":        3,
}

func (x QueryOrdering) String() string {
	return proto.EnumName(QueryOrdering_name, int32(x))
}

func (QueryOrdering) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{9}
}

type SystemObjectType int32

const (
	SystemObjectType_SUBUSER SystemObjectType = 0
	SystemObjectType_TABLE   SystemObjectType = 1
	SystemObjectType_KEY     SystemObjectType = 2
)

var SystemObjectType_name = map[int32]string{
	0: "SUBUSER",
	1: "TABLE",
	2: "KEY",
}

var SystemObjectType_value = map[string]int32{
	"SUBUSER": 0,
	"TABLE":   1,
	"KEY":     2,
}

func (x SystemObjectType) String() string {
	return proto.EnumName(SystemObjectType_name, int32(x))
}

func (SystemObjectType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{10}
}

type SubuserLoginType int32

const (
	SubuserLoginType_HANDLE      SubuserLoginType = 0
	SubuserLoginType_THIRD_PARTY SubuserLoginType = 1
)

var SubuserLoginType_name = map[int32]string{
	0: "HANDLE",
	1: "THIRD_PARTY",
}

var SubuserLoginType_value = map[string]int32{
	"HANDLE":      0,
	"THIRD_PARTY": 1,
}

func (x SubuserLoginType) String() string {
	return proto.EnumName(SubuserLoginType_name, int32(x))
}

func (SubuserLoginType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{11}
}

type EcdsaSignature struct {
	R                    string   `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
	S                    string   `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EcdsaSignature) Reset()         { *m = EcdsaSignature{} }
func (m *EcdsaSignature) String() string { return proto.CompactTextString(m) }
func (*EcdsaSignature) ProtoMessage()    {}
func (*EcdsaSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{0}
}

func (m *EcdsaSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EcdsaSignature.Unmarshal(m, b)
}
func (m *EcdsaSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EcdsaSignature.Marshal(b, m, deterministic)
}
func (m *EcdsaSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EcdsaSignature.Merge(m, src)
}
func (m *EcdsaSignature) XXX_Size() int {
	return xxx_messageInfo_EcdsaSignature.Size(m)
}
func (m *EcdsaSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_EcdsaSignature.DiscardUnknown(m)
}

var xxx_messageInfo_EcdsaSignature proto.InternalMessageInfo

func (m *EcdsaSignature) GetR() string {
	if m != nil {
		return m.R
	}
	return ""
}

func (m *EcdsaSignature) GetS() string {
	if m != nil {
		return m.S
	}
	return ""
}

type ProofOfCredential struct {
	CredType             CredentialProofType `protobuf:"varint,1,opt,name=credType,proto3,enum=zbprotocol.CredentialProofType" json:"credType,omitempty"`
	Signature            *EcdsaSignature     `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	JwtToken             string              `protobuf:"bytes,3,opt,name=jwtToken,proto3" json:"jwtToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ProofOfCredential) Reset()         { *m = ProofOfCredential{} }
func (m *ProofOfCredential) String() string { return proto.CompactTextString(m) }
func (*ProofOfCredential) ProtoMessage()    {}
func (*ProofOfCredential) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{1}
}

func (m *ProofOfCredential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProofOfCredential.Unmarshal(m, b)
}
func (m *ProofOfCredential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProofOfCredential.Marshal(b, m, deterministic)
}
func (m *ProofOfCredential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProofOfCredential.Merge(m, src)
}
func (m *ProofOfCredential) XXX_Size() int {
	return xxx_messageInfo_ProofOfCredential.Size(m)
}
func (m *ProofOfCredential) XXX_DiscardUnknown() {
	xxx_messageInfo_ProofOfCredential.DiscardUnknown(m)
}

var xxx_messageInfo_ProofOfCredential proto.InternalMessageInfo

func (m *ProofOfCredential) GetCredType() CredentialProofType {
	if m != nil {
		return m.CredType
	}
	return CredentialProofType_SIGNATURE
}

func (m *ProofOfCredential) GetSignature() *EcdsaSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *ProofOfCredential) GetJwtToken() string {
	if m != nil {
		return m.JwtToken
	}
	return ""
}

type ZbEmpty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZbEmpty) Reset()         { *m = ZbEmpty{} }
func (m *ZbEmpty) String() string { return proto.CompactTextString(m) }
func (*ZbEmpty) ProtoMessage()    {}
func (*ZbEmpty) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{2}
}

func (m *ZbEmpty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZbEmpty.Unmarshal(m, b)
}
func (m *ZbEmpty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZbEmpty.Marshal(b, m, deterministic)
}
func (m *ZbEmpty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZbEmpty.Merge(m, src)
}
func (m *ZbEmpty) XXX_Size() int {
	return xxx_messageInfo_ZbEmpty.Size(m)
}
func (m *ZbEmpty) XXX_DiscardUnknown() {
	xxx_messageInfo_ZbEmpty.DiscardUnknown(m)
}

var xxx_messageInfo_ZbEmpty proto.InternalMessageInfo

type ZbError struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZbError) Reset()         { *m = ZbError{} }
func (m *ZbError) String() string { return proto.CompactTextString(m) }
func (*ZbError) ProtoMessage()    {}
func (*ZbError) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{3}
}

func (m *ZbError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZbError.Unmarshal(m, b)
}
func (m *ZbError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZbError.Marshal(b, m, deterministic)
}
func (m *ZbError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZbError.Merge(m, src)
}
func (m *ZbError) XXX_Size() int {
	return xxx_messageInfo_ZbError.Size(m)
}
func (m *ZbError) XXX_DiscardUnknown() {
	xxx_messageInfo_ZbError.DiscardUnknown(m)
}

var xxx_messageInfo_ZbError proto.InternalMessageInfo

func (m *ZbError) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ZbError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type VersionDetails struct {
	ServerVersion        string   `protobuf:"bytes,1,opt,name=serverVersion,proto3" json:"serverVersion,omitempty"`
	ClientVersion        string   `protobuf:"bytes,2,opt,name=clientVersion,proto3" json:"clientVersion,omitempty"`
	MinClientVersion     string   `protobuf:"bytes,3,opt,name=minClientVersion,proto3" json:"minClientVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionDetails) Reset()         { *m = VersionDetails{} }
func (m *VersionDetails) String() string { return proto.CompactTextString(m) }
func (*VersionDetails) ProtoMessage()    {}
func (*VersionDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{4}
}

func (m *VersionDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionDetails.Unmarshal(m, b)
}
func (m *VersionDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionDetails.Marshal(b, m, deterministic)
}
func (m *VersionDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionDetails.Merge(m, src)
}
func (m *VersionDetails) XXX_Size() int {
	return xxx_messageInfo_VersionDetails.Size(m)
}
func (m *VersionDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionDetails.DiscardUnknown(m)
}

var xxx_messageInfo_VersionDetails proto.InternalMessageInfo

func (m *VersionDetails) GetServerVersion() string {
	if m != nil {
		return m.ServerVersion
	}
	return ""
}

func (m *VersionDetails) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

func (m *VersionDetails) GetMinClientVersion() string {
	if m != nil {
		return m.MinClientVersion
	}
	return ""
}

type FieldConstraint struct {
	ConstraintType       FieldConstraintType      `protobuf:"varint,1,opt,name=constraintType,proto3,enum=zbprotocol.FieldConstraintType" json:"constraintType,omitempty"`
	FieldKey             string                   `protobuf:"bytes,2,opt,name=fieldKey,proto3" json:"fieldKey,omitempty"`
	ValueType            FieldConstraintValueType `protobuf:"varint,3,opt,name=valueType,proto3,enum=zbprotocol.FieldConstraintValueType" json:"valueType,omitempty"`
	RequiredValue        string                   `protobuf:"bytes,4,opt,name=requiredValue,proto3" json:"requiredValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *FieldConstraint) Reset()         { *m = FieldConstraint{} }
func (m *FieldConstraint) String() string { return proto.CompactTextString(m) }
func (*FieldConstraint) ProtoMessage()    {}
func (*FieldConstraint) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{5}
}

func (m *FieldConstraint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldConstraint.Unmarshal(m, b)
}
func (m *FieldConstraint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldConstraint.Marshal(b, m, deterministic)
}
func (m *FieldConstraint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldConstraint.Merge(m, src)
}
func (m *FieldConstraint) XXX_Size() int {
	return xxx_messageInfo_FieldConstraint.Size(m)
}
func (m *FieldConstraint) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldConstraint.DiscardUnknown(m)
}

var xxx_messageInfo_FieldConstraint proto.InternalMessageInfo

func (m *FieldConstraint) GetConstraintType() FieldConstraintType {
	if m != nil {
		return m.ConstraintType
	}
	return FieldConstraintType_EQUALS_VALUE
}

func (m *FieldConstraint) GetFieldKey() string {
	if m != nil {
		return m.FieldKey
	}
	return ""
}

func (m *FieldConstraint) GetValueType() FieldConstraintValueType {
	if m != nil {
		return m.ValueType
	}
	return FieldConstraintValueType_CONSTANT
}

func (m *FieldConstraint) GetRequiredValue() string {
	if m != nil {
		return m.RequiredValue
	}
	return ""
}

type KeyPatternConstraint struct {
	ConstraintType       FieldConstraintType      `protobuf:"varint,1,opt,name=constraintType,proto3,enum=zbprotocol.FieldConstraintType" json:"constraintType,omitempty"`
	RequiredPrefix       string                   `protobuf:"bytes,2,opt,name=requiredPrefix,proto3" json:"requiredPrefix,omitempty"`
	RequiredSuffix       string                   `protobuf:"bytes,3,opt,name=requiredSuffix,proto3" json:"requiredSuffix,omitempty"`
	ValueType            FieldConstraintValueType `protobuf:"varint,4,opt,name=valueType,proto3,enum=zbprotocol.FieldConstraintValueType" json:"valueType,omitempty"`
	RequiredValue        string                   `protobuf:"bytes,5,opt,name=requiredValue,proto3" json:"requiredValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *KeyPatternConstraint) Reset()         { *m = KeyPatternConstraint{} }
func (m *KeyPatternConstraint) String() string { return proto.CompactTextString(m) }
func (*KeyPatternConstraint) ProtoMessage()    {}
func (*KeyPatternConstraint) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{6}
}

func (m *KeyPatternConstraint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyPatternConstraint.Unmarshal(m, b)
}
func (m *KeyPatternConstraint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyPatternConstraint.Marshal(b, m, deterministic)
}
func (m *KeyPatternConstraint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyPatternConstraint.Merge(m, src)
}
func (m *KeyPatternConstraint) XXX_Size() int {
	return xxx_messageInfo_KeyPatternConstraint.Size(m)
}
func (m *KeyPatternConstraint) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyPatternConstraint.DiscardUnknown(m)
}

var xxx_messageInfo_KeyPatternConstraint proto.InternalMessageInfo

func (m *KeyPatternConstraint) GetConstraintType() FieldConstraintType {
	if m != nil {
		return m.ConstraintType
	}
	return FieldConstraintType_EQUALS_VALUE
}

func (m *KeyPatternConstraint) GetRequiredPrefix() string {
	if m != nil {
		return m.RequiredPrefix
	}
	return ""
}

func (m *KeyPatternConstraint) GetRequiredSuffix() string {
	if m != nil {
		return m.RequiredSuffix
	}
	return ""
}

func (m *KeyPatternConstraint) GetValueType() FieldConstraintValueType {
	if m != nil {
		return m.ValueType
	}
	return FieldConstraintValueType_CONSTANT
}

func (m *KeyPatternConstraint) GetRequiredValue() string {
	if m != nil {
		return m.RequiredValue
	}
	return ""
}

type PermissionConstraint struct {
	ConstraintType       PermissionConstraintType `protobuf:"varint,1,opt,name=constraintType,proto3,enum=zbprotocol.PermissionConstraintType" json:"constraintType,omitempty"`
	FieldConstraint      *FieldConstraint         `protobuf:"bytes,2,opt,name=fieldConstraint,proto3" json:"fieldConstraint,omitempty"`
	KeyConstraint        *KeyPatternConstraint    `protobuf:"bytes,3,opt,name=keyConstraint,proto3" json:"keyConstraint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PermissionConstraint) Reset()         { *m = PermissionConstraint{} }
func (m *PermissionConstraint) String() string { return proto.CompactTextString(m) }
func (*PermissionConstraint) ProtoMessage()    {}
func (*PermissionConstraint) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{7}
}

func (m *PermissionConstraint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionConstraint.Unmarshal(m, b)
}
func (m *PermissionConstraint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionConstraint.Marshal(b, m, deterministic)
}
func (m *PermissionConstraint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionConstraint.Merge(m, src)
}
func (m *PermissionConstraint) XXX_Size() int {
	return xxx_messageInfo_PermissionConstraint.Size(m)
}
func (m *PermissionConstraint) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionConstraint.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionConstraint proto.InternalMessageInfo

func (m *PermissionConstraint) GetConstraintType() PermissionConstraintType {
	if m != nil {
		return m.ConstraintType
	}
	return PermissionConstraintType_FIELD
}

func (m *PermissionConstraint) GetFieldConstraint() *FieldConstraint {
	if m != nil {
		return m.FieldConstraint
	}
	return nil
}

func (m *PermissionConstraint) GetKeyConstraint() *KeyPatternConstraint {
	if m != nil {
		return m.KeyConstraint
	}
	return nil
}

type PermissionsEntry struct {
	Id                   string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TableId              string                  `protobuf:"bytes,2,opt,name=tableId,proto3" json:"tableId,omitempty"`
	AudienceType         PermissionAudienceType  `protobuf:"varint,3,opt,name=audienceType,proto3,enum=zbprotocol.PermissionAudienceType" json:"audienceType,omitempty"`
	AudienceId           string                  `protobuf:"bytes,4,opt,name=audienceId,proto3" json:"audienceId,omitempty"`
	Level                PermissionLevel         `protobuf:"varint,5,opt,name=level,proto3,enum=zbprotocol.PermissionLevel" json:"level,omitempty"`
	Nonce                int64                   `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Credential           *ProofOfCredential      `protobuf:"bytes,7,opt,name=credential,proto3" json:"credential,omitempty"`
	Constraints          []*PermissionConstraint `protobuf:"bytes,8,rep,name=constraints,proto3" json:"constraints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PermissionsEntry) Reset()         { *m = PermissionsEntry{} }
func (m *PermissionsEntry) String() string { return proto.CompactTextString(m) }
func (*PermissionsEntry) ProtoMessage()    {}
func (*PermissionsEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{8}
}

func (m *PermissionsEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionsEntry.Unmarshal(m, b)
}
func (m *PermissionsEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionsEntry.Marshal(b, m, deterministic)
}
func (m *PermissionsEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionsEntry.Merge(m, src)
}
func (m *PermissionsEntry) XXX_Size() int {
	return xxx_messageInfo_PermissionsEntry.Size(m)
}
func (m *PermissionsEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionsEntry.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionsEntry proto.InternalMessageInfo

func (m *PermissionsEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PermissionsEntry) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func (m *PermissionsEntry) GetAudienceType() PermissionAudienceType {
	if m != nil {
		return m.AudienceType
	}
	return PermissionAudienceType_INDIVIDUAL
}

func (m *PermissionsEntry) GetAudienceId() string {
	if m != nil {
		return m.AudienceId
	}
	return ""
}

func (m *PermissionsEntry) GetLevel() PermissionLevel {
	if m != nil {
		return m.Level
	}
	return PermissionLevel_NONE
}

func (m *PermissionsEntry) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *PermissionsEntry) GetCredential() *ProofOfCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *PermissionsEntry) GetConstraints() []*PermissionConstraint {
	if m != nil {
		return m.Constraints
	}
	return nil
}

type AuthenticateUser struct {
	ParentId             string             `protobuf:"bytes,1,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Handle               string             `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
	Password             string             `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Nonce                int64              `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Credential           *ProofOfCredential `protobuf:"bytes,5,opt,name=credential,proto3" json:"credential,omitempty"`
	LoginType            SubuserLoginType   `protobuf:"varint,6,opt,name=loginType,proto3,enum=zbprotocol.SubuserLoginType" json:"loginType,omitempty"`
	ThirdPartyCredential string             `protobuf:"bytes,7,opt,name=thirdPartyCredential,proto3" json:"thirdPartyCredential,omitempty"`
	ThirdPartySource     string             `protobuf:"bytes,8,opt,name=thirdPartySource,proto3" json:"thirdPartySource,omitempty"`
	ThirdPartyEmail      string             `protobuf:"bytes,9,opt,name=thirdPartyEmail,proto3" json:"thirdPartyEmail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AuthenticateUser) Reset()         { *m = AuthenticateUser{} }
func (m *AuthenticateUser) String() string { return proto.CompactTextString(m) }
func (*AuthenticateUser) ProtoMessage()    {}
func (*AuthenticateUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{9}
}

func (m *AuthenticateUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticateUser.Unmarshal(m, b)
}
func (m *AuthenticateUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticateUser.Marshal(b, m, deterministic)
}
func (m *AuthenticateUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticateUser.Merge(m, src)
}
func (m *AuthenticateUser) XXX_Size() int {
	return xxx_messageInfo_AuthenticateUser.Size(m)
}
func (m *AuthenticateUser) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticateUser.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticateUser proto.InternalMessageInfo

func (m *AuthenticateUser) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *AuthenticateUser) GetHandle() string {
	if m != nil {
		return m.Handle
	}
	return ""
}

func (m *AuthenticateUser) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AuthenticateUser) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *AuthenticateUser) GetCredential() *ProofOfCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *AuthenticateUser) GetLoginType() SubuserLoginType {
	if m != nil {
		return m.LoginType
	}
	return SubuserLoginType_HANDLE
}

func (m *AuthenticateUser) GetThirdPartyCredential() string {
	if m != nil {
		return m.ThirdPartyCredential
	}
	return ""
}

func (m *AuthenticateUser) GetThirdPartySource() string {
	if m != nil {
		return m.ThirdPartySource
	}
	return ""
}

func (m *AuthenticateUser) GetThirdPartyEmail() string {
	if m != nil {
		return m.ThirdPartyEmail
	}
	return ""
}

type AuthenticateUserResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	JwtToken             string   `protobuf:"bytes,2,opt,name=jwtToken,proto3" json:"jwtToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthenticateUserResponse) Reset()         { *m = AuthenticateUserResponse{} }
func (m *AuthenticateUserResponse) String() string { return proto.CompactTextString(m) }
func (*AuthenticateUserResponse) ProtoMessage()    {}
func (*AuthenticateUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{10}
}

func (m *AuthenticateUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticateUserResponse.Unmarshal(m, b)
}
func (m *AuthenticateUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticateUserResponse.Marshal(b, m, deterministic)
}
func (m *AuthenticateUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticateUserResponse.Merge(m, src)
}
func (m *AuthenticateUserResponse) XXX_Size() int {
	return xxx_messageInfo_AuthenticateUserResponse.Size(m)
}
func (m *AuthenticateUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticateUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticateUserResponse proto.InternalMessageInfo

func (m *AuthenticateUserResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AuthenticateUserResponse) GetJwtToken() string {
	if m != nil {
		return m.JwtToken
	}
	return ""
}

type NewSubIdentityRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Mobile               string   `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	LoginPassword        string   `protobuf:"bytes,5,opt,name=loginPassword,proto3" json:"loginPassword,omitempty"`
	PubKeyEncoded        string   `protobuf:"bytes,6,opt,name=pubKeyEncoded,proto3" json:"pubKeyEncoded,omitempty"`
	SignupCode           string   `protobuf:"bytes,7,opt,name=signupCode,proto3" json:"signupCode,omitempty"`
	GroupId              string   `protobuf:"bytes,8,opt,name=groupId,proto3" json:"groupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewSubIdentityRequest) Reset()         { *m = NewSubIdentityRequest{} }
func (m *NewSubIdentityRequest) String() string { return proto.CompactTextString(m) }
func (*NewSubIdentityRequest) ProtoMessage()    {}
func (*NewSubIdentityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{11}
}

func (m *NewSubIdentityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewSubIdentityRequest.Unmarshal(m, b)
}
func (m *NewSubIdentityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewSubIdentityRequest.Marshal(b, m, deterministic)
}
func (m *NewSubIdentityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewSubIdentityRequest.Merge(m, src)
}
func (m *NewSubIdentityRequest) XXX_Size() int {
	return xxx_messageInfo_NewSubIdentityRequest.Size(m)
}
func (m *NewSubIdentityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewSubIdentityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewSubIdentityRequest proto.InternalMessageInfo

func (m *NewSubIdentityRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NewSubIdentityRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NewSubIdentityRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *NewSubIdentityRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *NewSubIdentityRequest) GetLoginPassword() string {
	if m != nil {
		return m.LoginPassword
	}
	return ""
}

func (m *NewSubIdentityRequest) GetPubKeyEncoded() string {
	if m != nil {
		return m.PubKeyEncoded
	}
	return ""
}

func (m *NewSubIdentityRequest) GetSignupCode() string {
	if m != nil {
		return m.SignupCode
	}
	return ""
}

func (m *NewSubIdentityRequest) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

type NewIdentityRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Mobile               string   `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	AdminPassword        string   `protobuf:"bytes,4,opt,name=adminPassword,proto3" json:"adminPassword,omitempty"`
	PubKeyEncoded        string   `protobuf:"bytes,5,opt,name=pubKeyEncoded,proto3" json:"pubKeyEncoded,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewIdentityRequest) Reset()         { *m = NewIdentityRequest{} }
func (m *NewIdentityRequest) String() string { return proto.CompactTextString(m) }
func (*NewIdentityRequest) ProtoMessage()    {}
func (*NewIdentityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{12}
}

func (m *NewIdentityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewIdentityRequest.Unmarshal(m, b)
}
func (m *NewIdentityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewIdentityRequest.Marshal(b, m, deterministic)
}
func (m *NewIdentityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewIdentityRequest.Merge(m, src)
}
func (m *NewIdentityRequest) XXX_Size() int {
	return xxx_messageInfo_NewIdentityRequest.Size(m)
}
func (m *NewIdentityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewIdentityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewIdentityRequest proto.InternalMessageInfo

func (m *NewIdentityRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NewIdentityRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *NewIdentityRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *NewIdentityRequest) GetAdminPassword() string {
	if m != nil {
		return m.AdminPassword
	}
	return ""
}

func (m *NewIdentityRequest) GetPubKeyEncoded() string {
	if m != nil {
		return m.PubKeyEncoded
	}
	return ""
}

type SubIdentityModify struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubId                string             `protobuf:"bytes,2,opt,name=subId,proto3" json:"subId,omitempty"`
	NewName              string             `protobuf:"bytes,3,opt,name=newName,proto3" json:"newName,omitempty"`
	NewEmail             string             `protobuf:"bytes,4,opt,name=newEmail,proto3" json:"newEmail,omitempty"`
	NewMobile            string             `protobuf:"bytes,5,opt,name=newMobile,proto3" json:"newMobile,omitempty"`
	NewPassword          string             `protobuf:"bytes,6,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
	NewPubKey            string             `protobuf:"bytes,7,opt,name=newPubKey,proto3" json:"newPubKey,omitempty"`
	Nonce                int64              `protobuf:"varint,8,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Credential           *ProofOfCredential `protobuf:"bytes,9,opt,name=credential,proto3" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SubIdentityModify) Reset()         { *m = SubIdentityModify{} }
func (m *SubIdentityModify) String() string { return proto.CompactTextString(m) }
func (*SubIdentityModify) ProtoMessage()    {}
func (*SubIdentityModify) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{13}
}

func (m *SubIdentityModify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubIdentityModify.Unmarshal(m, b)
}
func (m *SubIdentityModify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubIdentityModify.Marshal(b, m, deterministic)
}
func (m *SubIdentityModify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubIdentityModify.Merge(m, src)
}
func (m *SubIdentityModify) XXX_Size() int {
	return xxx_messageInfo_SubIdentityModify.Size(m)
}
func (m *SubIdentityModify) XXX_DiscardUnknown() {
	xxx_messageInfo_SubIdentityModify.DiscardUnknown(m)
}

var xxx_messageInfo_SubIdentityModify proto.InternalMessageInfo

func (m *SubIdentityModify) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SubIdentityModify) GetSubId() string {
	if m != nil {
		return m.SubId
	}
	return ""
}

func (m *SubIdentityModify) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

func (m *SubIdentityModify) GetNewEmail() string {
	if m != nil {
		return m.NewEmail
	}
	return ""
}

func (m *SubIdentityModify) GetNewMobile() string {
	if m != nil {
		return m.NewMobile
	}
	return ""
}

func (m *SubIdentityModify) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

func (m *SubIdentityModify) GetNewPubKey() string {
	if m != nil {
		return m.NewPubKey
	}
	return ""
}

func (m *SubIdentityModify) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *SubIdentityModify) GetCredential() *ProofOfCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

type SubIdentitiesList struct {
	SubIdentities        []*NewSubIdentityRequest `protobuf:"bytes,1,rep,name=subIdentities,proto3" json:"subIdentities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SubIdentitiesList) Reset()         { *m = SubIdentitiesList{} }
func (m *SubIdentitiesList) String() string { return proto.CompactTextString(m) }
func (*SubIdentitiesList) ProtoMessage()    {}
func (*SubIdentitiesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{14}
}

func (m *SubIdentitiesList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubIdentitiesList.Unmarshal(m, b)
}
func (m *SubIdentitiesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubIdentitiesList.Marshal(b, m, deterministic)
}
func (m *SubIdentitiesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubIdentitiesList.Merge(m, src)
}
func (m *SubIdentitiesList) XXX_Size() int {
	return xxx_messageInfo_SubIdentitiesList.Size(m)
}
func (m *SubIdentitiesList) XXX_DiscardUnknown() {
	xxx_messageInfo_SubIdentitiesList.DiscardUnknown(m)
}

var xxx_messageInfo_SubIdentitiesList proto.InternalMessageInfo

func (m *SubIdentitiesList) GetSubIdentities() []*NewSubIdentityRequest {
	if m != nil {
		return m.SubIdentities
	}
	return nil
}

type NewIdentityConfirm struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentId             string   `protobuf:"bytes,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	VerificationCode     string   `protobuf:"bytes,3,opt,name=verificationCode,proto3" json:"verificationCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewIdentityConfirm) Reset()         { *m = NewIdentityConfirm{} }
func (m *NewIdentityConfirm) String() string { return proto.CompactTextString(m) }
func (*NewIdentityConfirm) ProtoMessage()    {}
func (*NewIdentityConfirm) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{15}
}

func (m *NewIdentityConfirm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewIdentityConfirm.Unmarshal(m, b)
}
func (m *NewIdentityConfirm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewIdentityConfirm.Marshal(b, m, deterministic)
}
func (m *NewIdentityConfirm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewIdentityConfirm.Merge(m, src)
}
func (m *NewIdentityConfirm) XXX_Size() int {
	return xxx_messageInfo_NewIdentityConfirm.Size(m)
}
func (m *NewIdentityConfirm) XXX_DiscardUnknown() {
	xxx_messageInfo_NewIdentityConfirm.DiscardUnknown(m)
}

var xxx_messageInfo_NewIdentityConfirm proto.InternalMessageInfo

func (m *NewIdentityConfirm) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NewIdentityConfirm) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *NewIdentityConfirm) GetVerificationCode() string {
	if m != nil {
		return m.VerificationCode
	}
	return ""
}

type NewIdentityResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Error                *ZbError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewIdentityResponse) Reset()         { *m = NewIdentityResponse{} }
func (m *NewIdentityResponse) String() string { return proto.CompactTextString(m) }
func (*NewIdentityResponse) ProtoMessage()    {}
func (*NewIdentityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{16}
}

func (m *NewIdentityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewIdentityResponse.Unmarshal(m, b)
}
func (m *NewIdentityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewIdentityResponse.Marshal(b, m, deterministic)
}
func (m *NewIdentityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewIdentityResponse.Merge(m, src)
}
func (m *NewIdentityResponse) XXX_Size() int {
	return xxx_messageInfo_NewIdentityResponse.Size(m)
}
func (m *NewIdentityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewIdentityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewIdentityResponse proto.InternalMessageInfo

func (m *NewIdentityResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NewIdentityResponse) GetError() *ZbError {
	if m != nil {
		return m.Error
	}
	return nil
}

type TableIndexField struct {
	Field                string        `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Ordering             QueryOrdering `protobuf:"varint,2,opt,name=ordering,proto3,enum=zbprotocol.QueryOrdering" json:"ordering,omitempty"`
	LanguageCode         string        `protobuf:"bytes,3,opt,name=languageCode,proto3" json:"languageCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TableIndexField) Reset()         { *m = TableIndexField{} }
func (m *TableIndexField) String() string { return proto.CompactTextString(m) }
func (*TableIndexField) ProtoMessage()    {}
func (*TableIndexField) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{17}
}

func (m *TableIndexField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableIndexField.Unmarshal(m, b)
}
func (m *TableIndexField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableIndexField.Marshal(b, m, deterministic)
}
func (m *TableIndexField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableIndexField.Merge(m, src)
}
func (m *TableIndexField) XXX_Size() int {
	return xxx_messageInfo_TableIndexField.Size(m)
}
func (m *TableIndexField) XXX_DiscardUnknown() {
	xxx_messageInfo_TableIndexField.DiscardUnknown(m)
}

var xxx_messageInfo_TableIndexField proto.InternalMessageInfo

func (m *TableIndexField) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *TableIndexField) GetOrdering() QueryOrdering {
	if m != nil {
		return m.Ordering
	}
	return QueryOrdering_LEXICOGRAPHIC
}

func (m *TableIndexField) GetLanguageCode() string {
	if m != nil {
		return m.LanguageCode
	}
	return ""
}

type TableIndexFields struct {
	Fields               []*TableIndexField `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TableIndexFields) Reset()         { *m = TableIndexFields{} }
func (m *TableIndexFields) String() string { return proto.CompactTextString(m) }
func (*TableIndexFields) ProtoMessage()    {}
func (*TableIndexFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{18}
}

func (m *TableIndexFields) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableIndexFields.Unmarshal(m, b)
}
func (m *TableIndexFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableIndexFields.Marshal(b, m, deterministic)
}
func (m *TableIndexFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableIndexFields.Merge(m, src)
}
func (m *TableIndexFields) XXX_Size() int {
	return xxx_messageInfo_TableIndexFields.Size(m)
}
func (m *TableIndexFields) XXX_DiscardUnknown() {
	xxx_messageInfo_TableIndexFields.DiscardUnknown(m)
}

var xxx_messageInfo_TableIndexFields proto.InternalMessageInfo

func (m *TableIndexFields) GetFields() []*TableIndexField {
	if m != nil {
		return m.Fields
	}
	return nil
}

type SimpleRequest struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Nonce                int64              `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Credential           *ProofOfCredential `protobuf:"bytes,3,opt,name=credential,proto3" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SimpleRequest) Reset()         { *m = SimpleRequest{} }
func (m *SimpleRequest) String() string { return proto.CompactTextString(m) }
func (*SimpleRequest) ProtoMessage()    {}
func (*SimpleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{19}
}

func (m *SimpleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleRequest.Unmarshal(m, b)
}
func (m *SimpleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleRequest.Marshal(b, m, deterministic)
}
func (m *SimpleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleRequest.Merge(m, src)
}
func (m *SimpleRequest) XXX_Size() int {
	return xxx_messageInfo_SimpleRequest.Size(m)
}
func (m *SimpleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleRequest proto.InternalMessageInfo

func (m *SimpleRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SimpleRequest) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *SimpleRequest) GetCredential() *ProofOfCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

type ListTablesRequest struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TableOwnerId         string             `protobuf:"bytes,2,opt,name=tableOwnerId,proto3" json:"tableOwnerId,omitempty"`
	Nonce                int64              `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Credential           *ProofOfCredential `protobuf:"bytes,4,opt,name=credential,proto3" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListTablesRequest) Reset()         { *m = ListTablesRequest{} }
func (m *ListTablesRequest) String() string { return proto.CompactTextString(m) }
func (*ListTablesRequest) ProtoMessage()    {}
func (*ListTablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{20}
}

func (m *ListTablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTablesRequest.Unmarshal(m, b)
}
func (m *ListTablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTablesRequest.Marshal(b, m, deterministic)
}
func (m *ListTablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTablesRequest.Merge(m, src)
}
func (m *ListTablesRequest) XXX_Size() int {
	return xxx_messageInfo_ListTablesRequest.Size(m)
}
func (m *ListTablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTablesRequest proto.InternalMessageInfo

func (m *ListTablesRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ListTablesRequest) GetTableOwnerId() string {
	if m != nil {
		return m.TableOwnerId
	}
	return ""
}

func (m *ListTablesRequest) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *ListTablesRequest) GetCredential() *ProofOfCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

type ListTablesResponse struct {
	Error                *ZbError       `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	TableDefinitions     []*TableCreate `protobuf:"bytes,2,rep,name=tableDefinitions,proto3" json:"tableDefinitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListTablesResponse) Reset()         { *m = ListTablesResponse{} }
func (m *ListTablesResponse) String() string { return proto.CompactTextString(m) }
func (*ListTablesResponse) ProtoMessage()    {}
func (*ListTablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{21}
}

func (m *ListTablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTablesResponse.Unmarshal(m, b)
}
func (m *ListTablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTablesResponse.Marshal(b, m, deterministic)
}
func (m *ListTablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTablesResponse.Merge(m, src)
}
func (m *ListTablesResponse) XXX_Size() int {
	return xxx_messageInfo_ListTablesResponse.Size(m)
}
func (m *ListTablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTablesResponse proto.InternalMessageInfo

func (m *ListTablesResponse) GetError() *ZbError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ListTablesResponse) GetTableDefinitions() []*TableCreate {
	if m != nil {
		return m.TableDefinitions
	}
	return nil
}

type ListKeysRequest struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TableId              string             `protobuf:"bytes,2,opt,name=tableId,proto3" json:"tableId,omitempty"`
	TableOwnerId         string             `protobuf:"bytes,3,opt,name=tableOwnerId,proto3" json:"tableOwnerId,omitempty"`
	Pattern              string             `protobuf:"bytes,4,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Nonce                int64              `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	PageIndex            int64              `protobuf:"varint,6,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	Credential           *ProofOfCredential `protobuf:"bytes,7,opt,name=credential,proto3" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListKeysRequest) Reset()         { *m = ListKeysRequest{} }
func (m *ListKeysRequest) String() string { return proto.CompactTextString(m) }
func (*ListKeysRequest) ProtoMessage()    {}
func (*ListKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{22}
}

func (m *ListKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListKeysRequest.Unmarshal(m, b)
}
func (m *ListKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListKeysRequest.Marshal(b, m, deterministic)
}
func (m *ListKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListKeysRequest.Merge(m, src)
}
func (m *ListKeysRequest) XXX_Size() int {
	return xxx_messageInfo_ListKeysRequest.Size(m)
}
func (m *ListKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListKeysRequest proto.InternalMessageInfo

func (m *ListKeysRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ListKeysRequest) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func (m *ListKeysRequest) GetTableOwnerId() string {
	if m != nil {
		return m.TableOwnerId
	}
	return ""
}

func (m *ListKeysRequest) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *ListKeysRequest) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *ListKeysRequest) GetPageIndex() int64 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *ListKeysRequest) GetCredential() *ProofOfCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

type ListKeysResponse struct {
	Error                *ZbError        `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Pagination           *PaginationInfo `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Keys                 []string        `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListKeysResponse) Reset()         { *m = ListKeysResponse{} }
func (m *ListKeysResponse) String() string { return proto.CompactTextString(m) }
func (*ListKeysResponse) ProtoMessage()    {}
func (*ListKeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{23}
}

func (m *ListKeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListKeysResponse.Unmarshal(m, b)
}
func (m *ListKeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListKeysResponse.Marshal(b, m, deterministic)
}
func (m *ListKeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListKeysResponse.Merge(m, src)
}
func (m *ListKeysResponse) XXX_Size() int {
	return xxx_messageInfo_ListKeysResponse.Size(m)
}
func (m *ListKeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListKeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListKeysResponse proto.InternalMessageInfo

func (m *ListKeysResponse) GetError() *ZbError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ListKeysResponse) GetPagination() *PaginationInfo {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *ListKeysResponse) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type TableCreate struct {
	Id                   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TableId              string              `protobuf:"bytes,2,opt,name=tableId,proto3" json:"tableId,omitempty"`
	DataFormat           TableDataFormat     `protobuf:"varint,3,opt,name=dataFormat,proto3,enum=zbprotocol.TableDataFormat" json:"dataFormat,omitempty"`
	Indices              *TableIndexFields   `protobuf:"bytes,4,opt,name=indices,proto3" json:"indices,omitempty"`
	Nonce                int64               `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	AllowTokenAuth       bool                `protobuf:"varint,6,opt,name=allowTokenAuth,proto3" json:"allowTokenAuth,omitempty"`
	Credential           *ProofOfCredential  `protobuf:"bytes,7,opt,name=credential,proto3" json:"credential,omitempty"`
	Permissions          []*PermissionsEntry `protobuf:"bytes,8,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TableCreate) Reset()         { *m = TableCreate{} }
func (m *TableCreate) String() string { return proto.CompactTextString(m) }
func (*TableCreate) ProtoMessage()    {}
func (*TableCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{24}
}

func (m *TableCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableCreate.Unmarshal(m, b)
}
func (m *TableCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableCreate.Marshal(b, m, deterministic)
}
func (m *TableCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableCreate.Merge(m, src)
}
func (m *TableCreate) XXX_Size() int {
	return xxx_messageInfo_TableCreate.Size(m)
}
func (m *TableCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_TableCreate.DiscardUnknown(m)
}

var xxx_messageInfo_TableCreate proto.InternalMessageInfo

func (m *TableCreate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TableCreate) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func (m *TableCreate) GetDataFormat() TableDataFormat {
	if m != nil {
		return m.DataFormat
	}
	return TableDataFormat_BINARY
}

func (m *TableCreate) GetIndices() *TableIndexFields {
	if m != nil {
		return m.Indices
	}
	return nil
}

func (m *TableCreate) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TableCreate) GetAllowTokenAuth() bool {
	if m != nil {
		return m.AllowTokenAuth
	}
	return false
}

func (m *TableCreate) GetCredential() *ProofOfCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *TableCreate) GetPermissions() []*PermissionsEntry {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type TablePutMulti struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TableOwnerId         string             `protobuf:"bytes,2,opt,name=tableOwnerId,proto3" json:"tableOwnerId,omitempty"`
	TableId              string             `protobuf:"bytes,3,opt,name=tableId,proto3" json:"tableId,omitempty"`
	Overwrite            bool               `protobuf:"varint,4,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
	Nonce                int64              `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Credential           *ProofOfCredential `protobuf:"bytes,6,opt,name=credential,proto3" json:"credential,omitempty"`
	Pairs                []*DataPair        `protobuf:"bytes,7,rep,name=pairs,proto3" json:"pairs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TablePutMulti) Reset()         { *m = TablePutMulti{} }
func (m *TablePutMulti) String() string { return proto.CompactTextString(m) }
func (*TablePutMulti) ProtoMessage()    {}
func (*TablePutMulti) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{25}
}

func (m *TablePutMulti) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TablePutMulti.Unmarshal(m, b)
}
func (m *TablePutMulti) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TablePutMulti.Marshal(b, m, deterministic)
}
func (m *TablePutMulti) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TablePutMulti.Merge(m, src)
}
func (m *TablePutMulti) XXX_Size() int {
	return xxx_messageInfo_TablePutMulti.Size(m)
}
func (m *TablePutMulti) XXX_DiscardUnknown() {
	xxx_messageInfo_TablePutMulti.DiscardUnknown(m)
}

var xxx_messageInfo_TablePutMulti proto.InternalMessageInfo

func (m *TablePutMulti) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TablePutMulti) GetTableOwnerId() string {
	if m != nil {
		return m.TableOwnerId
	}
	return ""
}

func (m *TablePutMulti) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func (m *TablePutMulti) GetOverwrite() bool {
	if m != nil {
		return m.Overwrite
	}
	return false
}

func (m *TablePutMulti) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TablePutMulti) GetCredential() *ProofOfCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *TablePutMulti) GetPairs() []*DataPair {
	if m != nil {
		return m.Pairs
	}
	return nil
}

type TablePut struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TableOwnerId         string             `protobuf:"bytes,2,opt,name=tableOwnerId,proto3" json:"tableOwnerId,omitempty"`
	TableId              string             `protobuf:"bytes,3,opt,name=tableId,proto3" json:"tableId,omitempty"`
	Key                  string             `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte             `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Overwrite            bool               `protobuf:"varint,6,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
	Nonce                int64              `protobuf:"varint,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Credential           *ProofOfCredential `protobuf:"bytes,8,opt,name=credential,proto3" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TablePut) Reset()         { *m = TablePut{} }
func (m *TablePut) String() string { return proto.CompactTextString(m) }
func (*TablePut) ProtoMessage()    {}
func (*TablePut) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{26}
}

func (m *TablePut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TablePut.Unmarshal(m, b)
}
func (m *TablePut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TablePut.Marshal(b, m, deterministic)
}
func (m *TablePut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TablePut.Merge(m, src)
}
func (m *TablePut) XXX_Size() int {
	return xxx_messageInfo_TablePut.Size(m)
}
func (m *TablePut) XXX_DiscardUnknown() {
	xxx_messageInfo_TablePut.DiscardUnknown(m)
}

var xxx_messageInfo_TablePut proto.InternalMessageInfo

func (m *TablePut) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TablePut) GetTableOwnerId() string {
	if m != nil {
		return m.TableOwnerId
	}
	return ""
}

func (m *TablePut) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func (m *TablePut) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TablePut) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TablePut) GetOverwrite() bool {
	if m != nil {
		return m.Overwrite
	}
	return false
}

func (m *TablePut) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TablePut) GetCredential() *ProofOfCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

type TableGet struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TableOwnerId         string             `protobuf:"bytes,2,opt,name=tableOwnerId,proto3" json:"tableOwnerId,omitempty"`
	TableId              string             `protobuf:"bytes,3,opt,name=tableId,proto3" json:"tableId,omitempty"`
	Nonce                int64              `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Credential           *ProofOfCredential `protobuf:"bytes,5,opt,name=credential,proto3" json:"credential,omitempty"`
	PageIndex            int64              `protobuf:"varint,6,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	Keys                 []string           `protobuf:"bytes,7,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TableGet) Reset()         { *m = TableGet{} }
func (m *TableGet) String() string { return proto.CompactTextString(m) }
func (*TableGet) ProtoMessage()    {}
func (*TableGet) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{27}
}

func (m *TableGet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableGet.Unmarshal(m, b)
}
func (m *TableGet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableGet.Marshal(b, m, deterministic)
}
func (m *TableGet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableGet.Merge(m, src)
}
func (m *TableGet) XXX_Size() int {
	return xxx_messageInfo_TableGet.Size(m)
}
func (m *TableGet) XXX_DiscardUnknown() {
	xxx_messageInfo_TableGet.DiscardUnknown(m)
}

var xxx_messageInfo_TableGet proto.InternalMessageInfo

func (m *TableGet) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TableGet) GetTableOwnerId() string {
	if m != nil {
		return m.TableOwnerId
	}
	return ""
}

func (m *TableGet) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func (m *TableGet) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TableGet) GetCredential() *ProofOfCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *TableGet) GetPageIndex() int64 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *TableGet) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type PaginationInfo struct {
	PageIndex            int64    `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	NextPageIndex        int64    `protobuf:"varint,2,opt,name=nextPageIndex,proto3" json:"nextPageIndex,omitempty"`
	HasNextPage          bool     `protobuf:"varint,3,opt,name=hasNextPage,proto3" json:"hasNextPage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaginationInfo) Reset()         { *m = PaginationInfo{} }
func (m *PaginationInfo) String() string { return proto.CompactTextString(m) }
func (*PaginationInfo) ProtoMessage()    {}
func (*PaginationInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{28}
}

func (m *PaginationInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaginationInfo.Unmarshal(m, b)
}
func (m *PaginationInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaginationInfo.Marshal(b, m, deterministic)
}
func (m *PaginationInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaginationInfo.Merge(m, src)
}
func (m *PaginationInfo) XXX_Size() int {
	return xxx_messageInfo_PaginationInfo.Size(m)
}
func (m *PaginationInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PaginationInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PaginationInfo proto.InternalMessageInfo

func (m *PaginationInfo) GetPageIndex() int64 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *PaginationInfo) GetNextPageIndex() int64 {
	if m != nil {
		return m.NextPageIndex
	}
	return 0
}

func (m *PaginationInfo) GetHasNextPage() bool {
	if m != nil {
		return m.HasNextPage
	}
	return false
}

type DataPair struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataPair) Reset()         { *m = DataPair{} }
func (m *DataPair) String() string { return proto.CompactTextString(m) }
func (*DataPair) ProtoMessage()    {}
func (*DataPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{29}
}

func (m *DataPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPair.Unmarshal(m, b)
}
func (m *DataPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPair.Marshal(b, m, deterministic)
}
func (m *DataPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPair.Merge(m, src)
}
func (m *DataPair) XXX_Size() int {
	return xxx_messageInfo_DataPair.Size(m)
}
func (m *DataPair) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPair.DiscardUnknown(m)
}

var xxx_messageInfo_DataPair proto.InternalMessageInfo

func (m *DataPair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DataPair) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type TableGetResponse struct {
	Error                *ZbError        `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Pagination           *PaginationInfo `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Data                 []*DataPair     `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TableGetResponse) Reset()         { *m = TableGetResponse{} }
func (m *TableGetResponse) String() string { return proto.CompactTextString(m) }
func (*TableGetResponse) ProtoMessage()    {}
func (*TableGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{30}
}

func (m *TableGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableGetResponse.Unmarshal(m, b)
}
func (m *TableGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableGetResponse.Marshal(b, m, deterministic)
}
func (m *TableGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableGetResponse.Merge(m, src)
}
func (m *TableGetResponse) XXX_Size() int {
	return xxx_messageInfo_TableGetResponse.Size(m)
}
func (m *TableGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TableGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TableGetResponse proto.InternalMessageInfo

func (m *TableGetResponse) GetError() *ZbError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *TableGetResponse) GetPagination() *PaginationInfo {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *TableGetResponse) GetData() []*DataPair {
	if m != nil {
		return m.Data
	}
	return nil
}

type TableSubqueryComparison struct {
	Op                   QueryOperator `protobuf:"varint,1,opt,name=op,proto3,enum=zbprotocol.QueryOperator" json:"op,omitempty"`
	Field                string        `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Value                string        `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Ordering             QueryOrdering `protobuf:"varint,4,opt,name=ordering,proto3,enum=zbprotocol.QueryOrdering" json:"ordering,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TableSubqueryComparison) Reset()         { *m = TableSubqueryComparison{} }
func (m *TableSubqueryComparison) String() string { return proto.CompactTextString(m) }
func (*TableSubqueryComparison) ProtoMessage()    {}
func (*TableSubqueryComparison) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{31}
}

func (m *TableSubqueryComparison) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableSubqueryComparison.Unmarshal(m, b)
}
func (m *TableSubqueryComparison) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableSubqueryComparison.Marshal(b, m, deterministic)
}
func (m *TableSubqueryComparison) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableSubqueryComparison.Merge(m, src)
}
func (m *TableSubqueryComparison) XXX_Size() int {
	return xxx_messageInfo_TableSubqueryComparison.Size(m)
}
func (m *TableSubqueryComparison) XXX_DiscardUnknown() {
	xxx_messageInfo_TableSubqueryComparison.DiscardUnknown(m)
}

var xxx_messageInfo_TableSubqueryComparison proto.InternalMessageInfo

func (m *TableSubqueryComparison) GetOp() QueryOperator {
	if m != nil {
		return m.Op
	}
	return QueryOperator_EQUALS
}

func (m *TableSubqueryComparison) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *TableSubqueryComparison) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TableSubqueryComparison) GetOrdering() QueryOrdering {
	if m != nil {
		return m.Ordering
	}
	return QueryOrdering_LEXICOGRAPHIC
}

type TableQuery struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TableOwnerId         string             `protobuf:"bytes,2,opt,name=tableOwnerId,proto3" json:"tableOwnerId,omitempty"`
	TableId              string             `protobuf:"bytes,3,opt,name=tableId,proto3" json:"tableId,omitempty"`
	Query                *TableSubQuery     `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	Nonce                int64              `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	PageIndex            int64              `protobuf:"varint,6,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	Credential           *ProofOfCredential `protobuf:"bytes,7,opt,name=credential,proto3" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TableQuery) Reset()         { *m = TableQuery{} }
func (m *TableQuery) String() string { return proto.CompactTextString(m) }
func (*TableQuery) ProtoMessage()    {}
func (*TableQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{32}
}

func (m *TableQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableQuery.Unmarshal(m, b)
}
func (m *TableQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableQuery.Marshal(b, m, deterministic)
}
func (m *TableQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableQuery.Merge(m, src)
}
func (m *TableQuery) XXX_Size() int {
	return xxx_messageInfo_TableQuery.Size(m)
}
func (m *TableQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_TableQuery.DiscardUnknown(m)
}

var xxx_messageInfo_TableQuery proto.InternalMessageInfo

func (m *TableQuery) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TableQuery) GetTableOwnerId() string {
	if m != nil {
		return m.TableOwnerId
	}
	return ""
}

func (m *TableQuery) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func (m *TableQuery) GetQuery() *TableSubQuery {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *TableQuery) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TableQuery) GetPageIndex() int64 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *TableQuery) GetCredential() *ProofOfCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

type TableSubQuery struct {
	IsCompound           bool                     `protobuf:"varint,1,opt,name=isCompound,proto3" json:"isCompound,omitempty"`
	CompoundOperator     QueryLogicalOperator     `protobuf:"varint,2,opt,name=compoundOperator,proto3,enum=zbprotocol.QueryLogicalOperator" json:"compoundOperator,omitempty"`
	CompoundLeft         *TableSubQuery           `protobuf:"bytes,3,opt,name=compoundLeft,proto3" json:"compoundLeft,omitempty"`
	CompoundRight        *TableSubQuery           `protobuf:"bytes,4,opt,name=compoundRight,proto3" json:"compoundRight,omitempty"`
	Comparison           *TableSubqueryComparison `protobuf:"bytes,5,opt,name=comparison,proto3" json:"comparison,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TableSubQuery) Reset()         { *m = TableSubQuery{} }
func (m *TableSubQuery) String() string { return proto.CompactTextString(m) }
func (*TableSubQuery) ProtoMessage()    {}
func (*TableSubQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{33}
}

func (m *TableSubQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableSubQuery.Unmarshal(m, b)
}
func (m *TableSubQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableSubQuery.Marshal(b, m, deterministic)
}
func (m *TableSubQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableSubQuery.Merge(m, src)
}
func (m *TableSubQuery) XXX_Size() int {
	return xxx_messageInfo_TableSubQuery.Size(m)
}
func (m *TableSubQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_TableSubQuery.DiscardUnknown(m)
}

var xxx_messageInfo_TableSubQuery proto.InternalMessageInfo

func (m *TableSubQuery) GetIsCompound() bool {
	if m != nil {
		return m.IsCompound
	}
	return false
}

func (m *TableSubQuery) GetCompoundOperator() QueryLogicalOperator {
	if m != nil {
		return m.CompoundOperator
	}
	return QueryLogicalOperator_LOGICAL_OR
}

func (m *TableSubQuery) GetCompoundLeft() *TableSubQuery {
	if m != nil {
		return m.CompoundLeft
	}
	return nil
}

func (m *TableSubQuery) GetCompoundRight() *TableSubQuery {
	if m != nil {
		return m.CompoundRight
	}
	return nil
}

func (m *TableSubQuery) GetComparison() *TableSubqueryComparison {
	if m != nil {
		return m.Comparison
	}
	return nil
}

type DeleteSystemObjectRequest struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ObjectType           SystemObjectType   `protobuf:"varint,2,opt,name=objectType,proto3,enum=zbprotocol.SystemObjectType" json:"objectType,omitempty"`
	TableOwnerId         string             `protobuf:"bytes,3,opt,name=tableOwnerId,proto3" json:"tableOwnerId,omitempty"`
	TableId              string             `protobuf:"bytes,4,opt,name=tableId,proto3" json:"tableId,omitempty"`
	ObjectId             string             `protobuf:"bytes,5,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Nonce                int64              `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Credential           *ProofOfCredential `protobuf:"bytes,7,opt,name=credential,proto3" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DeleteSystemObjectRequest) Reset()         { *m = DeleteSystemObjectRequest{} }
func (m *DeleteSystemObjectRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSystemObjectRequest) ProtoMessage()    {}
func (*DeleteSystemObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3574f20b61059ff, []int{34}
}

func (m *DeleteSystemObjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSystemObjectRequest.Unmarshal(m, b)
}
func (m *DeleteSystemObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSystemObjectRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSystemObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSystemObjectRequest.Merge(m, src)
}
func (m *DeleteSystemObjectRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSystemObjectRequest.Size(m)
}
func (m *DeleteSystemObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSystemObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSystemObjectRequest proto.InternalMessageInfo

func (m *DeleteSystemObjectRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteSystemObjectRequest) GetObjectType() SystemObjectType {
	if m != nil {
		return m.ObjectType
	}
	return SystemObjectType_SUBUSER
}

func (m *DeleteSystemObjectRequest) GetTableOwnerId() string {
	if m != nil {
		return m.TableOwnerId
	}
	return ""
}

func (m *DeleteSystemObjectRequest) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func (m *DeleteSystemObjectRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *DeleteSystemObjectRequest) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *DeleteSystemObjectRequest) GetCredential() *ProofOfCredential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func init() {
	proto.RegisterEnum("zbprotocol.TableDataFormat", TableDataFormat_name, TableDataFormat_value)
	proto.RegisterEnum("zbprotocol.PermissionConstraintType", PermissionConstraintType_name, PermissionConstraintType_value)
	proto.RegisterEnum("zbprotocol.FieldConstraintType", FieldConstraintType_name, FieldConstraintType_value)
	proto.RegisterEnum("zbprotocol.FieldConstraintValueType", FieldConstraintValueType_name, FieldConstraintValueType_value)
	proto.RegisterEnum("zbprotocol.PermissionAudienceType", PermissionAudienceType_name, PermissionAudienceType_value)
	proto.RegisterEnum("zbprotocol.PermissionLevel", PermissionLevel_name, PermissionLevel_value)
	proto.RegisterEnum("zbprotocol.CredentialProofType", CredentialProofType_name, CredentialProofType_value)
	proto.RegisterEnum("zbprotocol.QueryOperator", QueryOperator_name, QueryOperator_value)
	proto.RegisterEnum("zbprotocol.QueryLogicalOperator", QueryLogicalOperator_name, QueryLogicalOperator_value)
	proto.RegisterEnum("zbprotocol.QueryOrdering", QueryOrdering_name, QueryOrdering_value)
	proto.RegisterEnum("zbprotocol.SystemObjectType", SystemObjectType_name, SystemObjectType_value)
	proto.RegisterEnum("zbprotocol.SubuserLoginType", SubuserLoginType_name, SubuserLoginType_value)
	proto.RegisterType((*EcdsaSignature)(nil), "zbprotocol.EcdsaSignature")
	proto.RegisterType((*ProofOfCredential)(nil), "zbprotocol.ProofOfCredential")
	proto.RegisterType((*ZbEmpty)(nil), "zbprotocol.ZbEmpty")
	proto.RegisterType((*ZbError)(nil), "zbprotocol.ZbError")
	proto.RegisterType((*VersionDetails)(nil), "zbprotocol.VersionDetails")
	proto.RegisterType((*FieldConstraint)(nil), "zbprotocol.FieldConstraint")
	proto.RegisterType((*KeyPatternConstraint)(nil), "zbprotocol.KeyPatternConstraint")
	proto.RegisterType((*PermissionConstraint)(nil), "zbprotocol.PermissionConstraint")
	proto.RegisterType((*PermissionsEntry)(nil), "zbprotocol.PermissionsEntry")
	proto.RegisterType((*AuthenticateUser)(nil), "zbprotocol.AuthenticateUser")
	proto.RegisterType((*AuthenticateUserResponse)(nil), "zbprotocol.AuthenticateUserResponse")
	proto.RegisterType((*NewSubIdentityRequest)(nil), "zbprotocol.NewSubIdentityRequest")
	proto.RegisterType((*NewIdentityRequest)(nil), "zbprotocol.NewIdentityRequest")
	proto.RegisterType((*SubIdentityModify)(nil), "zbprotocol.SubIdentityModify")
	proto.RegisterType((*SubIdentitiesList)(nil), "zbprotocol.SubIdentitiesList")
	proto.RegisterType((*NewIdentityConfirm)(nil), "zbprotocol.NewIdentityConfirm")
	proto.RegisterType((*NewIdentityResponse)(nil), "zbprotocol.NewIdentityResponse")
	proto.RegisterType((*TableIndexField)(nil), "zbprotocol.TableIndexField")
	proto.RegisterType((*TableIndexFields)(nil), "zbprotocol.TableIndexFields")
	proto.RegisterType((*SimpleRequest)(nil), "zbprotocol.SimpleRequest")
	proto.RegisterType((*ListTablesRequest)(nil), "zbprotocol.ListTablesRequest")
	proto.RegisterType((*ListTablesResponse)(nil), "zbprotocol.ListTablesResponse")
	proto.RegisterType((*ListKeysRequest)(nil), "zbprotocol.ListKeysRequest")
	proto.RegisterType((*ListKeysResponse)(nil), "zbprotocol.ListKeysResponse")
	proto.RegisterType((*TableCreate)(nil), "zbprotocol.TableCreate")
	proto.RegisterType((*TablePutMulti)(nil), "zbprotocol.TablePutMulti")
	proto.RegisterType((*TablePut)(nil), "zbprotocol.TablePut")
	proto.RegisterType((*TableGet)(nil), "zbprotocol.TableGet")
	proto.RegisterType((*PaginationInfo)(nil), "zbprotocol.PaginationInfo")
	proto.RegisterType((*DataPair)(nil), "zbprotocol.DataPair")
	proto.RegisterType((*TableGetResponse)(nil), "zbprotocol.TableGetResponse")
	proto.RegisterType((*TableSubqueryComparison)(nil), "zbprotocol.TableSubqueryComparison")
	proto.RegisterType((*TableQuery)(nil), "zbprotocol.TableQuery")
	proto.RegisterType((*TableSubQuery)(nil), "zbprotocol.TableSubQuery")
	proto.RegisterType((*DeleteSystemObjectRequest)(nil), "zbprotocol.DeleteSystemObjectRequest")
}

func init() {
	proto.RegisterFile("zbprotocol.proto", fileDescriptor_f3574f20b61059ff)
}

var fileDescriptor_f3574f20b61059ff = []byte{
	// 2639 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0xdd, 0x6f, 0xe3, 0xc6,
	0x11, 0x37, 0x29, 0xd9, 0x96, 0xc6, 0x5f, 0xbc, 0x3d, 0x37, 0xd1, 0x39, 0x4e, 0x72, 0x65, 0xaf,
	0x41, 0x22, 0x14, 0x09, 0x7a, 0x87, 0x5e, 0x8a, 0xa4, 0xf9, 0xa0, 0x25, 0xda, 0xc7, 0x98, 0x96,
	0x78, 0x2b, 0xfa, 0x9a, 0x0b, 0x0a, 0x18, 0x94, 0xb8, 0xd2, 0x31, 0x27, 0x91, 0x0a, 0x49, 0xd9,
	0x51, 0x1e, 0x8b, 0x3c, 0xf4, 0xa5, 0xef, 0x2d, 0xd0, 0xa7, 0x14, 0x68, 0xff, 0x8f, 0xfe, 0x23,
	0xed, 0x6b, 0x81, 0xa2, 0x2d, 0xd0, 0xd7, 0xb6, 0x28, 0x76, 0x97, 0x14, 0x3f, 0x44, 0xfa, 0xec,
	0xe6, 0xae, 0x7d, 0xe3, 0x0e, 0x67, 0x86, 0x33, 0xbf, 0x99, 0x9d, 0x9d, 0x1d, 0x82, 0xf4, 0x55,
	0x7f, 0xea, 0x7b, 0xa1, 0x37, 0xf0, 0xc6, 0x6f, 0xb3, 0x07, 0x04, 0x09, 0x45, 0xfe, 0x01, 0x6c,
	0xab, 0x03, 0x3b, 0xb0, 0x7a, 0xce, 0xc8, 0xb5, 0xc2, 0x99, 0x4f, 0xd0, 0x26, 0x08, 0x7e, 0x43,
	0xb8, 0x2d, 0xbc, 0x59, 0xc7, 0x82, 0x4f, 0x57, 0x41, 0x43, 0xe4, 0xab, 0x40, 0xfe, 0x9d, 0x00,
	0x37, 0x0c, 0xdf, 0xf3, 0x86, 0xdd, 0x61, 0xcb, 0x27, 0x36, 0x71, 0x43, 0xc7, 0x1a, 0xa3, 0xf7,
	0xa1, 0x36, 0xf0, 0x89, 0x6d, 0xce, 0xa7, 0x84, 0x09, 0x6e, 0xdf, 0x7d, 0xfd, 0xed, 0xd4, 0x47,
	0x13, 0x4e, 0x26, 0x4a, 0xd9, 0xf0, 0x42, 0x00, 0xfd, 0x18, 0xea, 0x41, 0xfc, 0x6d, 0xf6, 0xa1,
	0x8d, 0xbb, 0x7b, 0x69, 0xe9, 0xac, 0x75, 0x38, 0x61, 0x46, 0x7b, 0x50, 0xfb, 0xfc, 0x22, 0x34,
	0xbd, 0xa7, 0xc4, 0x6d, 0x54, 0x98, 0x85, 0x8b, 0xb5, 0x5c, 0x87, 0xf5, 0xcf, 0xfa, 0xea, 0x64,
	0x1a, 0xce, 0xe5, 0x77, 0xd9, 0xa3, 0xef, 0x7b, 0x3e, 0x42, 0x50, 0x1d, 0x78, 0x36, 0x37, 0xb2,
	0x82, 0xd9, 0x33, 0x6a, 0xc0, 0xfa, 0x84, 0x04, 0x81, 0x35, 0x22, 0x91, 0x9b, 0xf1, 0x52, 0xfe,
	0x85, 0x00, 0xdb, 0x8f, 0x88, 0x1f, 0x38, 0x9e, 0xdb, 0x26, 0xa1, 0xe5, 0x8c, 0x03, 0x74, 0x07,
	0xb6, 0x02, 0xe2, 0x9f, 0x13, 0x3f, 0xa2, 0x47, 0x38, 0x65, 0x89, 0x94, 0x6b, 0x30, 0x76, 0x88,
	0x1b, 0xc6, 0x5c, 0x5c, 0x71, 0x96, 0x88, 0x9a, 0x20, 0x4d, 0x1c, 0xb7, 0x95, 0x61, 0xe4, 0x6e,
	0x2c, 0xd1, 0xe5, 0x3f, 0x09, 0xb0, 0x73, 0xe8, 0x90, 0xb1, 0xdd, 0xf2, 0xdc, 0x20, 0xf4, 0x2d,
	0xc7, 0x0d, 0xd1, 0x11, 0x6c, 0x0f, 0x16, 0xab, 0x32, 0xec, 0x73, 0x42, 0x0c, 0xfb, 0x9c, 0x18,
	0xc5, 0x71, 0x48, 0xd9, 0x8e, 0xc9, 0x3c, 0xb2, 0x74, 0xb1, 0x46, 0x07, 0x50, 0x3f, 0xb7, 0xc6,
	0x33, 0xc2, 0xf4, 0x57, 0x98, 0xfe, 0x3b, 0x97, 0xe8, 0x7f, 0x14, 0xf3, 0xe2, 0x44, 0x8c, 0xc2,
	0xe1, 0x93, 0x2f, 0x66, 0x8e, 0x4f, 0x6c, 0xf6, 0xbe, 0x51, 0xe5, 0x70, 0x64, 0x88, 0xf2, 0xaf,
	0x45, 0xd8, 0x3d, 0x26, 0x73, 0xc3, 0x0a, 0x43, 0xe2, 0xbb, 0x2f, 0xc2, 0xcf, 0x37, 0x60, 0x3b,
	0xfe, 0xa4, 0xe1, 0x93, 0xa1, 0xf3, 0x65, 0xe4, 0x6d, 0x8e, 0x9a, 0xe6, 0xeb, 0xcd, 0x86, 0x94,
	0xaf, 0x92, 0xe5, 0xe3, 0xd4, 0x2c, 0x36, 0xd5, 0xe7, 0x84, 0xcd, 0x6a, 0x11, 0x36, 0xff, 0x10,
	0x60, 0xd7, 0x20, 0xfe, 0xc4, 0x09, 0x68, 0x36, 0xa4, 0xb0, 0xd1, 0x4b, 0xb0, 0xc9, 0xd8, 0x51,
	0x24, 0x59, 0x08, 0x90, 0x0a, 0x3b, 0xc3, 0xac, 0xcd, 0xd1, 0x86, 0x7c, 0xe5, 0x12, 0xb7, 0x70,
	0x5e, 0x06, 0x1d, 0xc2, 0xd6, 0x53, 0x32, 0x4f, 0x29, 0xa9, 0x30, 0x25, 0xb7, 0xd3, 0x4a, 0x8a,
	0x22, 0x8d, 0xb3, 0x62, 0xf2, 0xdf, 0x45, 0x90, 0x12, 0xdb, 0x03, 0xd5, 0x0d, 0xfd, 0x39, 0xda,
	0x06, 0xd1, 0xb1, 0xa3, 0x6d, 0x27, 0x3a, 0x36, 0xdd, 0xbe, 0xa1, 0xd5, 0x1f, 0x13, 0xcd, 0x8e,
	0xb7, 0x6f, 0xb4, 0x44, 0x87, 0xb0, 0x69, 0xcd, 0x6c, 0x87, 0xb8, 0x83, 0x74, 0xf6, 0xca, 0xc5,
	0xc8, 0x28, 0x29, 0x4e, 0x9c, 0x91, 0x43, 0xaf, 0x01, 0xc4, 0x6b, 0xcd, 0x8e, 0x72, 0x37, 0x45,
	0x41, 0x3f, 0x84, 0xd5, 0x31, 0x39, 0x27, 0x63, 0x16, 0xba, 0xed, 0x2c, 0x56, 0xc9, 0x07, 0x74,
	0xca, 0x82, 0x39, 0x27, 0xda, 0x85, 0x55, 0xd7, 0x73, 0x07, 0xa4, 0xb1, 0xc6, 0x0a, 0x11, 0x5f,
	0xa0, 0x0f, 0x00, 0x06, 0x8b, 0x52, 0xd9, 0x58, 0x67, 0xa0, 0xbd, 0x9a, 0xd1, 0x96, 0xaf, 0xbc,
	0x38, 0x25, 0x80, 0x0e, 0x60, 0x23, 0x89, 0x67, 0xd0, 0xa8, 0xdd, 0xae, 0xe4, 0x41, 0x2f, 0x4a,
	0x04, 0x9c, 0x16, 0x92, 0xff, 0x25, 0x82, 0xa4, 0xcc, 0xc2, 0x27, 0x54, 0xe5, 0xc0, 0x0a, 0xc9,
	0x69, 0x40, 0x7c, 0x5a, 0x1f, 0xa6, 0x96, 0x4f, 0xdc, 0x50, 0x8b, 0x81, 0x5f, 0xac, 0xd1, 0x4b,
	0xb0, 0xf6, 0xc4, 0x72, 0xed, 0x71, 0x5c, 0x3c, 0xa3, 0x15, 0x97, 0x09, 0x82, 0x0b, 0xcf, 0xb7,
	0xe3, 0xda, 0x1c, 0xaf, 0x13, 0xef, 0xab, 0xe5, 0xde, 0xaf, 0x5e, 0xd7, 0xfb, 0xf7, 0xa0, 0x3e,
	0xf6, 0x46, 0x8e, 0xcb, 0x42, 0xbd, 0xc6, 0x22, 0xb1, 0x9f, 0x96, 0xee, 0xcd, 0xfa, 0xb3, 0x80,
	0xf8, 0x7a, 0xcc, 0x83, 0x13, 0x76, 0x74, 0x17, 0x76, 0xc3, 0x27, 0x8e, 0x6f, 0x1b, 0x96, 0x1f,
	0xce, 0x5b, 0xd9, 0x10, 0xd4, 0x71, 0xe1, 0x3b, 0x5a, 0xbd, 0x13, 0x7a, 0xcf, 0x9b, 0xf9, 0x03,
	0xd2, 0xa8, 0xf1, 0xea, 0x9d, 0xa7, 0xa3, 0x37, 0x61, 0x27, 0xa1, 0xa9, 0x13, 0xcb, 0x19, 0x37,
	0xea, 0x8c, 0x35, 0x4f, 0x96, 0x0f, 0xa1, 0x91, 0x87, 0x1f, 0x93, 0x60, 0xea, 0xb9, 0x01, 0x59,
	0xca, 0xfc, 0xf4, 0xf1, 0x27, 0xe6, 0x8e, 0xbf, 0xbf, 0x09, 0xf0, 0x9d, 0x0e, 0xb9, 0xe8, 0xcd,
	0xfa, 0x1a, 0x33, 0x38, 0x9c, 0x63, 0xf2, 0xc5, 0x8c, 0x04, 0xe1, 0x92, 0x16, 0x04, 0x55, 0xd7,
	0x9a, 0xc4, 0xe1, 0x63, 0xcf, 0x34, 0x40, 0x84, 0x59, 0xc9, 0x23, 0xc7, 0x17, 0x34, 0xd4, 0x13,
	0xaf, 0xef, 0x8c, 0xe3, 0xfa, 0x1d, 0xad, 0x68, 0x09, 0x63, 0x50, 0x1a, 0x71, 0xbc, 0xa3, 0x12,
	0x96, 0x21, 0x52, 0xae, 0xe9, 0xac, 0x7f, 0x4c, 0xe6, 0xaa, 0x4b, 0x8f, 0x5d, 0x9b, 0xc5, 0xa8,
	0x8e, 0xb3, 0x44, 0xba, 0xd7, 0xe8, 0xf9, 0x3e, 0x9b, 0xb6, 0xe8, 0x31, 0xcd, 0xf1, 0x4f, 0x51,
	0xe8, 0x6e, 0x1f, 0xf9, 0xde, 0x6c, 0xaa, 0xd9, 0x11, 0xd8, 0xf1, 0x52, 0xfe, 0x46, 0x00, 0xd4,
	0x21, 0x17, 0x79, 0x77, 0x63, 0xf7, 0x84, 0x22, 0xf7, 0xc4, 0x62, 0xf7, 0x2a, 0x79, 0xf7, 0x2c,
	0x7b, 0x92, 0x72, 0x2f, 0x3a, 0xbd, 0x32, 0xc4, 0x65, 0xf7, 0x56, 0x0b, 0xdc, 0x93, 0xbf, 0x11,
	0xe1, 0x46, 0x2a, 0x26, 0x27, 0x9e, 0xed, 0x0c, 0x97, 0x4b, 0xda, 0x2e, 0xac, 0x06, 0x94, 0x29,
	0xb6, 0x8f, 0x2d, 0xa8, 0xeb, 0x2e, 0xb9, 0xe8, 0x50, 0x67, 0xb8, 0x81, 0xf1, 0x92, 0x26, 0x82,
	0x4b, 0x2e, 0x78, 0x5e, 0x71, 0xe3, 0x16, 0x6b, 0xb4, 0x0f, 0x75, 0x97, 0x5c, 0x9c, 0x70, 0xc7,
	0xb8, 0x4d, 0x09, 0x01, 0xdd, 0x86, 0x0d, 0x97, 0x5c, 0x2c, 0x3c, 0xe3, 0x21, 0x49, 0x93, 0x22,
	0x79, 0x83, 0x79, 0x11, 0xc5, 0x23, 0x21, 0x24, 0x3b, 0xb9, 0x56, 0xbe, 0x93, 0xeb, 0xd7, 0xdc,
	0xc9, 0xf2, 0xcf, 0xd2, 0x18, 0x39, 0x24, 0xd0, 0x9d, 0x80, 0x36, 0x01, 0x5b, 0x41, 0x9a, 0xd8,
	0x10, 0x58, 0x79, 0xfb, 0x6e, 0x5a, 0x6d, 0x61, 0xc2, 0xe3, 0xac, 0x9c, 0x3c, 0xce, 0xa4, 0x49,
	0xcb, 0x73, 0x87, 0x8e, 0x3f, 0x29, 0xda, 0x5b, 0x8b, 0x92, 0x27, 0xe6, 0x4a, 0x5e, 0x13, 0xa4,
	0x73, 0xe2, 0x3b, 0x43, 0xba, 0x43, 0x59, 0x29, 0xb5, 0xe3, 0x88, 0x2c, 0xd1, 0x65, 0x03, 0x6e,
	0x66, 0x92, 0xb2, 0x64, 0x2b, 0xbf, 0x05, 0xab, 0x84, 0x36, 0xa8, 0xd1, 0x71, 0x7b, 0x33, 0xed,
	0x55, 0xd4, 0xbb, 0x62, 0xce, 0x21, 0xff, 0x5c, 0x80, 0x1d, 0x93, 0x9d, 0x70, 0xae, 0x4d, 0xbe,
	0x64, 0x67, 0x31, 0x0d, 0x03, 0x3b, 0x83, 0x23, 0x8d, 0x7c, 0x81, 0x7e, 0x04, 0x35, 0xcf, 0xb7,
	0x89, 0xef, 0xb8, 0x23, 0xa6, 0x77, 0xfb, 0xee, 0xad, 0xb4, 0xde, 0x87, 0x33, 0xe2, 0xcf, 0xbb,
	0x11, 0x03, 0x5e, 0xb0, 0x22, 0x19, 0x36, 0xc7, 0x96, 0x3b, 0x9a, 0x59, 0x23, 0x92, 0x72, 0x2d,
	0x43, 0x93, 0x8f, 0x40, 0xca, 0xd9, 0x10, 0xa0, 0x7b, 0xb0, 0xc6, 0xbe, 0x1b, 0x87, 0x26, 0x73,
	0x0e, 0xe6, 0xb8, 0x71, 0xc4, 0x2a, 0x87, 0xb0, 0xd5, 0x73, 0x26, 0xd3, 0x31, 0x29, 0x2b, 0x4f,
	0x8b, 0x0c, 0x13, 0xcb, 0x33, 0xac, 0x72, 0xdd, 0x0c, 0xfb, 0x8d, 0x00, 0x37, 0x68, 0x56, 0x31,
	0xab, 0x82, 0xb2, 0x4f, 0xcb, 0xb0, 0xc9, 0x5a, 0x89, 0xee, 0x85, 0x4b, 0xfc, 0x45, 0x1e, 0x64,
	0x68, 0x89, 0x79, 0x95, 0x72, 0xf3, 0xaa, 0xd7, 0x35, 0xef, 0x6b, 0x01, 0x50, 0xda, 0xbc, 0x28,
	0x69, 0x16, 0x49, 0x22, 0x3c, 0x2b, 0x49, 0x50, 0x0b, 0x24, 0x66, 0x66, 0x9b, 0x0c, 0x1d, 0xd7,
	0xa1, 0xd9, 0x48, 0xef, 0x70, 0x34, 0x2a, 0x2f, 0x2f, 0x45, 0xa5, 0xe5, 0x13, 0x2b, 0x24, 0x78,
	0x49, 0x40, 0xfe, 0x8b, 0x00, 0x3b, 0xd4, 0x8c, 0x63, 0x32, 0x2f, 0xc5, 0xa8, 0xbc, 0xfb, 0xca,
	0xa3, 0x57, 0x29, 0x40, 0xaf, 0x01, 0xeb, 0x53, 0xde, 0x04, 0x46, 0x75, 0x2b, 0x5e, 0x26, 0xb8,
	0xae, 0xa6, 0x71, 0xdd, 0x87, 0xfa, 0xd4, 0x1a, 0xf1, 0x3c, 0x8a, 0x5a, 0xa7, 0x84, 0xf0, 0x2d,
	0xdb, 0x27, 0xf9, 0x97, 0x02, 0x48, 0x89, 0xbb, 0xd7, 0xc7, 0xfc, 0x3d, 0x80, 0xa9, 0x35, 0x72,
	0x5c, 0xb6, 0xf9, 0x8b, 0x2e, 0xb2, 0xc6, 0xe2, 0xad, 0xe6, 0x0e, 0x3d, 0x9c, 0xe2, 0xa6, 0xa7,
	0xd4, 0x53, 0x32, 0x0f, 0x1a, 0x95, 0xdb, 0x15, 0x7a, 0x4a, 0xd1, 0x67, 0xf9, 0xcf, 0x22, 0x6c,
	0xa4, 0x02, 0x74, 0x0d, 0xe8, 0xdf, 0x07, 0xb0, 0xad, 0xd0, 0x3a, 0xf4, 0xfc, 0x89, 0x15, 0x46,
	0x6d, 0xef, 0xf2, 0x6e, 0x6c, 0x2f, 0x58, 0x70, 0x8a, 0x1d, 0xdd, 0x87, 0x75, 0xc7, 0xb5, 0x9d,
	0x01, 0x09, 0xa2, 0xc4, 0xdd, 0xbf, 0x64, 0x1f, 0x07, 0x38, 0x66, 0x2e, 0x89, 0xd8, 0x1b, 0xb0,
	0x6d, 0x8d, 0xc7, 0xde, 0x05, 0xeb, 0x4a, 0x68, 0x67, 0xc3, 0xc2, 0x56, 0xc3, 0x39, 0xea, 0xb7,
	0x6d, 0x7d, 0x3f, 0x84, 0x8d, 0x69, 0x72, 0x51, 0x88, 0x5a, 0xdf, 0xfd, 0xe2, 0xd6, 0x97, 0xdf,
	0x23, 0x70, 0x5a, 0x40, 0xfe, 0xa7, 0x00, 0x5b, 0xcc, 0x35, 0x63, 0x16, 0x9e, 0xcc, 0xc6, 0xa1,
	0xf3, 0x5f, 0x15, 0x83, 0x54, 0x44, 0x2a, 0xd9, 0x88, 0xec, 0x43, 0xdd, 0x3b, 0x27, 0xfe, 0x85,
	0xef, 0x84, 0xbc, 0x7b, 0xaa, 0xe1, 0x84, 0x50, 0x02, 0x5d, 0x16, 0x92, 0xb5, 0xeb, 0x42, 0xd2,
	0x84, 0xd5, 0xa9, 0xe5, 0xf8, 0x41, 0x63, 0x9d, 0x81, 0xb1, 0x9b, 0x96, 0xa4, 0xa1, 0x37, 0x2c,
	0xc7, 0xc7, 0x9c, 0x85, 0x5e, 0x2f, 0x6b, 0xb1, 0xfb, 0xcf, 0xd9, 0x73, 0x09, 0x2a, 0x4f, 0xc9,
	0x3c, 0xda, 0xde, 0xf4, 0x91, 0x7a, 0x7b, 0xbe, 0xb8, 0xe9, 0x6e, 0x62, 0xbe, 0xc8, 0x22, 0xb4,
	0x56, 0x8a, 0xd0, 0x7a, 0x39, 0x42, 0xb5, 0xeb, 0x6e, 0xf8, 0x3f, 0xc6, 0x5e, 0x1f, 0x91, 0xe7,
	0xed, 0xf5, 0x0b, 0xb9, 0xe1, 0x5c, 0x5e, 0xfd, 0xe2, 0x12, 0xb2, 0x9e, 0x2a, 0x21, 0xe7, 0xb0,
	0x9d, 0x2d, 0x3a, 0x59, 0x1d, 0x42, 0x5e, 0xc7, 0x1d, 0xd8, 0x72, 0xc9, 0x97, 0xa1, 0xb1, 0xe0,
	0xe0, 0x87, 0x6e, 0x96, 0x48, 0x9b, 0xc6, 0x27, 0x56, 0xd0, 0x89, 0x68, 0xcc, 0xf5, 0x1a, 0x4e,
	0x93, 0xe4, 0xbb, 0x50, 0x8b, 0x53, 0x2c, 0x4e, 0x00, 0xa1, 0x20, 0x01, 0xc4, 0x54, 0x02, 0xc8,
	0xbf, 0x15, 0xa2, 0x9e, 0xe2, 0x88, 0x84, 0xff, 0xeb, 0xf2, 0xfb, 0x26, 0x54, 0x69, 0x05, 0x64,
	0xe5, 0xb7, 0x6c, 0xab, 0x30, 0x0e, 0xf9, 0xf7, 0x02, 0xbc, 0xcc, 0xac, 0xec, 0xcd, 0xfa, 0x5f,
	0xd0, 0x06, 0xaa, 0xe5, 0x4d, 0xa6, 0x96, 0xef, 0x04, 0x9e, 0x8b, 0xde, 0x02, 0xd1, 0x9b, 0x46,
	0xf3, 0x97, 0x82, 0x4e, 0x6b, 0x4a, 0x7c, 0x2b, 0xf4, 0x7c, 0x2c, 0x7a, 0xd3, 0xa4, 0x61, 0x13,
	0xd3, 0x0d, 0xdb, 0x02, 0x98, 0xe8, 0xda, 0xc5, 0x77, 0x46, 0xba, 0x8d, 0xab, 0x5e, 0xb9, 0x8d,
	0x93, 0xff, 0x2d, 0x00, 0x30, 0x4b, 0x19, 0xc3, 0x73, 0xce, 0xef, 0x77, 0x60, 0x95, 0x79, 0x1f,
	0x1d, 0x11, 0xb7, 0x96, 0x8e, 0x88, 0xde, 0xac, 0xcf, 0xbe, 0x8b, 0x39, 0xdf, 0xff, 0xe3, 0x3c,
	0xff, 0x83, 0x18, 0xd5, 0xf4, 0xd8, 0x16, 0x7a, 0xb9, 0x74, 0x02, 0x1a, 0x30, 0x6f, 0xe6, 0x72,
	0x2c, 0x6a, 0x38, 0x45, 0x41, 0x3a, 0x48, 0x83, 0xe8, 0x39, 0x8e, 0x56, 0xd4, 0x38, 0xdf, 0x5e,
	0x42, 0x5c, 0xf7, 0x46, 0xce, 0xc0, 0x1a, 0x2f, 0xa2, 0xba, 0x24, 0x89, 0x3e, 0x80, 0xcd, 0x98,
	0xa6, 0x93, 0x61, 0x3c, 0x04, 0xbb, 0x04, 0xaa, 0x0c, 0x3b, 0xfa, 0x08, 0xb6, 0xe2, 0x35, 0x76,
	0x46, 0x4f, 0xc2, 0x67, 0x43, 0x9d, 0xe5, 0x47, 0x2d, 0x80, 0xc1, 0x22, 0x39, 0xa3, 0x6a, 0xf3,
	0xbd, 0x22, 0xe9, 0x5c, 0x1e, 0xe3, 0x94, 0x98, 0xfc, 0x2b, 0x11, 0x6e, 0xb5, 0xc9, 0x98, 0x84,
	0xa4, 0x37, 0x0f, 0x42, 0x32, 0xe9, 0xf6, 0x3f, 0x27, 0x83, 0xb0, 0xac, 0x1b, 0xfc, 0x09, 0x80,
	0xc7, 0x18, 0xd8, 0x10, 0x46, 0x2c, 0x18, 0xc2, 0xa4, 0x94, 0xb0, 0x21, 0x4c, 0x8a, 0xff, 0xaa,
	0x1d, 0x63, 0x9c, 0x92, 0xd5, 0x6c, 0x4a, 0xee, 0x41, 0x8d, 0xeb, 0xd2, 0xe2, 0xbb, 0xf7, 0x62,
	0xfd, 0x42, 0xc6, 0x6d, 0xcd, 0x77, 0xa3, 0x7b, 0x58, 0xd2, 0x47, 0x21, 0x80, 0xb5, 0x03, 0xad,
	0xa3, 0xe0, 0xc7, 0xd2, 0x0a, 0xda, 0x06, 0x30, 0x74, 0x45, 0xeb, 0x9c, 0x99, 0xea, 0xa7, 0xa6,
	0x24, 0xa0, 0x1a, 0x54, 0x3f, 0xe9, 0x75, 0x3b, 0x92, 0xd8, 0xbc, 0x0f, 0x8d, 0xb2, 0x89, 0x2c,
	0xaa, 0xc3, 0xea, 0xa1, 0xa6, 0xea, 0x6d, 0x69, 0x05, 0xed, 0xc0, 0xc6, 0xb1, 0xfa, 0xf8, 0xcc,
	0x50, 0x4c, 0x53, 0xc5, 0x1d, 0x49, 0x68, 0xde, 0x87, 0x9b, 0x05, 0x53, 0x6e, 0x24, 0xc1, 0xa6,
	0xfa, 0xf0, 0x54, 0xd1, 0x7b, 0x67, 0x8f, 0x14, 0xfd, 0x54, 0x95, 0x56, 0xd0, 0x16, 0xd4, 0x7b,
	0xaa, 0x19, 0x2d, 0x85, 0xe6, 0x19, 0x34, 0xca, 0x26, 0xd1, 0x68, 0x13, 0x6a, 0xad, 0x6e, 0xa7,
	0x67, 0x2a, 0x1d, 0x53, 0x5a, 0x41, 0xeb, 0x50, 0x39, 0xd5, 0xda, 0x92, 0x40, 0x35, 0x98, 0xda,
	0x89, 0xda, 0x33, 0x95, 0x13, 0x43, 0x12, 0xd1, 0x0d, 0xd8, 0xea, 0x28, 0xe6, 0x29, 0x56, 0xf4,
	0xb3, 0x2e, 0x6e, 0xab, 0x58, 0xaa, 0x50, 0x57, 0xb1, 0xd2, 0x69, 0x77, 0x4f, 0xa4, 0x6a, 0xf3,
	0x43, 0x78, 0xa9, 0x78, 0x90, 0x4a, 0x41, 0xd0, 0x3a, 0x6d, 0xed, 0x91, 0xd6, 0x3e, 0x55, 0x74,
	0x69, 0x85, 0x82, 0x70, 0xda, 0x53, 0xb1, 0x24, 0x50, 0x79, 0xe3, 0xf4, 0x40, 0xd7, 0x5a, 0x92,
	0xd8, 0x3c, 0x81, 0x9d, 0xdc, 0x9c, 0x94, 0x32, 0x76, 0xba, 0x1d, 0x95, 0x8b, 0x60, 0x55, 0x69,
	0x73, 0x11, 0xc5, 0x30, 0xd4, 0x4e, 0x5b, 0x12, 0xe9, 0x73, 0x5b, 0xd5, 0x55, 0x53, 0x95, 0x2a,
	0xf4, 0x23, 0x4a, 0xfb, 0x44, 0xeb, 0x68, 0x3d, 0x53, 0xc5, 0x52, 0xb5, 0x79, 0x0f, 0x6e, 0x16,
	0xfc, 0x71, 0x62, 0xa8, 0x68, 0x47, 0xcc, 0x8f, 0x08, 0xa4, 0x4f, 0x7e, 0x6a, 0x9e, 0x99, 0xdd,
	0x63, 0x95, 0x82, 0xfb, 0xb5, 0x00, 0x5b, 0x99, 0x3a, 0x4d, 0x3f, 0xc1, 0x71, 0x95, 0x56, 0x28,
	0xc6, 0x47, 0x58, 0x55, 0x4c, 0x15, 0x9f, 0x99, 0x0f, 0x94, 0x0e, 0x47, 0x48, 0x57, 0x7b, 0x3d,
	0xbe, 0x14, 0xa9, 0x0d, 0x9d, 0xae, 0x79, 0x16, 0x09, 0x54, 0xd0, 0x4d, 0xd8, 0x49, 0x0b, 0x9c,
	0xa9, 0x0f, 0xa5, 0x2a, 0xd5, 0xb2, 0x90, 0xa1, 0x94, 0x55, 0x1a, 0x63, 0x9a, 0x1e, 0x67, 0x3d,
	0x55, 0xc1, 0xad, 0x07, 0xd2, 0x5a, 0xf3, 0x5d, 0xd8, 0x2d, 0x2a, 0x2f, 0x54, 0xbf, 0xde, 0x3d,
	0xd2, 0x5a, 0x2c, 0x02, 0x3c, 0x39, 0xe2, 0xb5, 0xd2, 0x69, 0x4b, 0x42, 0xf3, 0x71, 0x6c, 0x7e,
	0x7c, 0x8d, 0xbf, 0x01, 0x5b, 0xba, 0xfa, 0xa9, 0xd6, 0xea, 0x1e, 0x61, 0xc5, 0x78, 0xa0, 0xb5,
	0xb8, 0x17, 0x58, 0x55, 0xf4, 0xb3, 0xce, 0xe9, 0xc9, 0x81, 0x8a, 0x7b, 0x92, 0x80, 0x76, 0x41,
	0xd2, 0x3a, 0xa6, 0x7a, 0x84, 0x53, 0x54, 0x91, 0xfa, 0x76, 0x78, 0xaa, 0xeb, 0x3c, 0x73, 0x2b,
	0xcd, 0x7b, 0x20, 0xe5, 0xf7, 0x2d, 0xda, 0x80, 0xf5, 0xde, 0xe9, 0x01, 0x8b, 0xe5, 0x0a, 0x4d,
	0x5a, 0x53, 0x39, 0xd0, 0x55, 0x49, 0xa0, 0x19, 0x74, 0xac, 0x3e, 0x96, 0xc4, 0xe6, 0x3b, 0x20,
	0xe5, 0x27, 0xae, 0x14, 0xd1, 0x07, 0x4a, 0xa7, 0xad, 0xab, 0xdc, 0x01, 0xf3, 0x81, 0x86, 0xdb,
	0x67, 0x86, 0x82, 0xcd, 0xc7, 0x92, 0x70, 0xf7, 0xaf, 0x75, 0x90, 0x3e, 0x23, 0xa1, 0xd5, 0xb7,
	0x02, 0x62, 0xf8, 0xde, 0xb9, 0x63, 0x13, 0x1f, 0x7d, 0x0c, 0x1b, 0xd1, 0x1f, 0x30, 0xd6, 0xbd,
	0xe4, 0xcf, 0xff, 0xc9, 0x34, 0x9c, 0xef, 0x65, 0x0e, 0xf9, 0xec, 0xef, 0x3a, 0x79, 0x05, 0x69,
	0x70, 0x83, 0x4f, 0xd9, 0x52, 0x93, 0x21, 0xf4, 0x6a, 0x6e, 0x30, 0x9c, 0x9d, 0xc7, 0xed, 0x15,
	0xb5, 0x19, 0xf2, 0x0a, 0xea, 0xf2, 0xa1, 0x41, 0x66, 0x36, 0x85, 0x32, 0xf5, 0x38, 0x33, 0xca,
	0xd8, 0x2b, 0xf9, 0x4a, 0x34, 0xd1, 0x92, 0x57, 0xd0, 0xa7, 0x70, 0x13, 0x93, 0x91, 0x13, 0x84,
	0xc4, 0x4f, 0x0d, 0x89, 0xd0, 0x6b, 0xb9, 0x99, 0x56, 0x6e, 0xa0, 0xb5, 0xf7, 0x7a, 0xe9, 0x7b,
	0xde, 0x35, 0xc9, 0x2b, 0xe8, 0x18, 0x50, 0x34, 0xd9, 0xba, 0x8a, 0xe2, 0x88, 0xb5, 0xcc, 0xef,
	0xfb, 0xb0, 0x6e, 0xcc, 0x42, 0x5a, 0xe6, 0xd0, 0xee, 0xd2, 0xf9, 0x61, 0xcc, 0xc2, 0x32, 0xb9,
	0x8f, 0x61, 0x33, 0x92, 0xe3, 0x57, 0xaa, 0x5b, 0x45, 0xc2, 0xec, 0x55, 0x99, 0x86, 0x0f, 0x60,
	0x83, 0x5f, 0x7e, 0x19, 0x37, 0x2a, 0x9b, 0x5d, 0x94, 0x89, 0x7f, 0x04, 0xeb, 0x47, 0xa4, 0xcc,
	0xf0, 0x23, 0x12, 0xee, 0xed, 0x17, 0x51, 0x53, 0x30, 0xb6, 0xa0, 0xce, 0x36, 0x15, 0x53, 0xf1,
	0xd2, 0x12, 0x33, 0x7b, 0x77, 0x65, 0x25, 0xc7, 0x64, 0x1e, 0x5c, 0x4d, 0x49, 0x7e, 0x0a, 0x21,
	0xaf, 0x20, 0x0c, 0xc0, 0x7d, 0x65, 0x3f, 0x64, 0x9e, 0x3d, 0xf5, 0xbc, 0x4a, 0x92, 0xb4, 0x61,
	0xab, 0x47, 0xc2, 0xa4, 0xf2, 0xa2, 0x4b, 0x2f, 0xcc, 0x65, 0x20, 0x3f, 0x84, 0x3a, 0xdb, 0xe1,
	0xcc, 0xb0, 0x8c, 0x86, 0xfc, 0x8f, 0x8c, 0xbd, 0x3b, 0x97, 0xbd, 0x4d, 0x19, 0x76, 0x02, 0x90,
	0x8c, 0xbf, 0xb2, 0x9b, 0x75, 0x69, 0x6a, 0xb7, 0xf7, 0x5a, 0xd9, 0xeb, 0x85, 0xba, 0x23, 0xa8,
	0xc5, 0x88, 0xa2, 0x57, 0x8a, 0x71, 0xe6, 0xaa, 0x9e, 0x15, 0x04, 0x1d, 0x36, 0x79, 0x2f, 0xc4,
	0x0b, 0x21, 0xfa, 0x7e, 0xe6, 0xa2, 0x50, 0xd6, 0x25, 0x95, 0x00, 0x77, 0x20, 0xc3, 0xa6, 0xe7,
	0x8f, 0xde, 0xfe, 0x2a, 0xaa, 0x79, 0x07, 0xe9, 0xea, 0xc7, 0x78, 0x0d, 0xa1, 0xbf, 0xc6, 0xe4,
	0xee, 0xfd, 0x27, 0x00, 0x00, 0xff, 0xff, 0x31, 0xb6, 0x15, 0x72, 0xc3, 0x21, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ZetabaseProviderClient is the client API for ZetabaseProvider service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZetabaseProviderClient interface {
	VersionInfo(ctx context.Context, in *ZbEmpty, opts ...grpc.CallOption) (*VersionDetails, error)
	ModifySubIdentity(ctx context.Context, in *SubIdentityModify, opts ...grpc.CallOption) (*ZbError, error)
	ListSubIdentities(ctx context.Context, in *SimpleRequest, opts ...grpc.CallOption) (*SubIdentitiesList, error)
	RegisterNewIdentity(ctx context.Context, in *NewIdentityRequest, opts ...grpc.CallOption) (*NewIdentityResponse, error)
	ConfirmNewIdentity(ctx context.Context, in *NewIdentityConfirm, opts ...grpc.CallOption) (*ZbError, error)
	PutData(ctx context.Context, in *TablePut, opts ...grpc.CallOption) (*ZbError, error)
	PutDataMulti(ctx context.Context, in *TablePutMulti, opts ...grpc.CallOption) (*ZbError, error)
	CreateTable(ctx context.Context, in *TableCreate, opts ...grpc.CallOption) (*ZbError, error)
	GetData(ctx context.Context, in *TableGet, opts ...grpc.CallOption) (*TableGetResponse, error)
	QueryData(ctx context.Context, in *TableQuery, opts ...grpc.CallOption) (*TableGetResponse, error)
	QueryKeys(ctx context.Context, in *TableQuery, opts ...grpc.CallOption) (*ListKeysResponse, error)
	CreateUser(ctx context.Context, in *NewSubIdentityRequest, opts ...grpc.CallOption) (*NewIdentityResponse, error)
	SetPermission(ctx context.Context, in *PermissionsEntry, opts ...grpc.CallOption) (*ZbError, error)
	LoginUser(ctx context.Context, in *AuthenticateUser, opts ...grpc.CallOption) (*AuthenticateUserResponse, error)
	ListTables(ctx context.Context, in *ListTablesRequest, opts ...grpc.CallOption) (*ListTablesResponse, error)
	ListKeys(ctx context.Context, in *ListKeysRequest, opts ...grpc.CallOption) (*ListKeysResponse, error)
	DeleteObject(ctx context.Context, in *DeleteSystemObjectRequest, opts ...grpc.CallOption) (*ZbError, error)
}

type zetabaseProviderClient struct {
	cc grpc.ClientConnInterface
}

func NewZetabaseProviderClient(cc grpc.ClientConnInterface) ZetabaseProviderClient {
	return &zetabaseProviderClient{cc}
}

func (c *zetabaseProviderClient) VersionInfo(ctx context.Context, in *ZbEmpty, opts ...grpc.CallOption) (*VersionDetails, error) {
	out := new(VersionDetails)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/VersionInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) ModifySubIdentity(ctx context.Context, in *SubIdentityModify, opts ...grpc.CallOption) (*ZbError, error) {
	out := new(ZbError)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/ModifySubIdentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) ListSubIdentities(ctx context.Context, in *SimpleRequest, opts ...grpc.CallOption) (*SubIdentitiesList, error) {
	out := new(SubIdentitiesList)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/ListSubIdentities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) RegisterNewIdentity(ctx context.Context, in *NewIdentityRequest, opts ...grpc.CallOption) (*NewIdentityResponse, error) {
	out := new(NewIdentityResponse)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/RegisterNewIdentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) ConfirmNewIdentity(ctx context.Context, in *NewIdentityConfirm, opts ...grpc.CallOption) (*ZbError, error) {
	out := new(ZbError)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/ConfirmNewIdentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) PutData(ctx context.Context, in *TablePut, opts ...grpc.CallOption) (*ZbError, error) {
	out := new(ZbError)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/PutData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) PutDataMulti(ctx context.Context, in *TablePutMulti, opts ...grpc.CallOption) (*ZbError, error) {
	out := new(ZbError)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/PutDataMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) CreateTable(ctx context.Context, in *TableCreate, opts ...grpc.CallOption) (*ZbError, error) {
	out := new(ZbError)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/CreateTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) GetData(ctx context.Context, in *TableGet, opts ...grpc.CallOption) (*TableGetResponse, error) {
	out := new(TableGetResponse)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/GetData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) QueryData(ctx context.Context, in *TableQuery, opts ...grpc.CallOption) (*TableGetResponse, error) {
	out := new(TableGetResponse)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/QueryData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) QueryKeys(ctx context.Context, in *TableQuery, opts ...grpc.CallOption) (*ListKeysResponse, error) {
	out := new(ListKeysResponse)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/QueryKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) CreateUser(ctx context.Context, in *NewSubIdentityRequest, opts ...grpc.CallOption) (*NewIdentityResponse, error) {
	out := new(NewIdentityResponse)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) SetPermission(ctx context.Context, in *PermissionsEntry, opts ...grpc.CallOption) (*ZbError, error) {
	out := new(ZbError)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/SetPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) LoginUser(ctx context.Context, in *AuthenticateUser, opts ...grpc.CallOption) (*AuthenticateUserResponse, error) {
	out := new(AuthenticateUserResponse)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/LoginUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) ListTables(ctx context.Context, in *ListTablesRequest, opts ...grpc.CallOption) (*ListTablesResponse, error) {
	out := new(ListTablesResponse)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/ListTables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) ListKeys(ctx context.Context, in *ListKeysRequest, opts ...grpc.CallOption) (*ListKeysResponse, error) {
	out := new(ListKeysResponse)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/ListKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetabaseProviderClient) DeleteObject(ctx context.Context, in *DeleteSystemObjectRequest, opts ...grpc.CallOption) (*ZbError, error) {
	out := new(ZbError)
	err := c.cc.Invoke(ctx, "/zbprotocol.ZetabaseProvider/DeleteObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZetabaseProviderServer is the server API for ZetabaseProvider service.
type ZetabaseProviderServer interface {
	VersionInfo(context.Context, *ZbEmpty) (*VersionDetails, error)
	ModifySubIdentity(context.Context, *SubIdentityModify) (*ZbError, error)
	ListSubIdentities(context.Context, *SimpleRequest) (*SubIdentitiesList, error)
	RegisterNewIdentity(context.Context, *NewIdentityRequest) (*NewIdentityResponse, error)
	ConfirmNewIdentity(context.Context, *NewIdentityConfirm) (*ZbError, error)
	PutData(context.Context, *TablePut) (*ZbError, error)
	PutDataMulti(context.Context, *TablePutMulti) (*ZbError, error)
	CreateTable(context.Context, *TableCreate) (*ZbError, error)
	GetData(context.Context, *TableGet) (*TableGetResponse, error)
	QueryData(context.Context, *TableQuery) (*TableGetResponse, error)
	QueryKeys(context.Context, *TableQuery) (*ListKeysResponse, error)
	CreateUser(context.Context, *NewSubIdentityRequest) (*NewIdentityResponse, error)
	SetPermission(context.Context, *PermissionsEntry) (*ZbError, error)
	LoginUser(context.Context, *AuthenticateUser) (*AuthenticateUserResponse, error)
	ListTables(context.Context, *ListTablesRequest) (*ListTablesResponse, error)
	ListKeys(context.Context, *ListKeysRequest) (*ListKeysResponse, error)
	DeleteObject(context.Context, *DeleteSystemObjectRequest) (*ZbError, error)
}

// UnimplementedZetabaseProviderServer can be embedded to have forward compatible implementations.
type UnimplementedZetabaseProviderServer struct {
}

func (*UnimplementedZetabaseProviderServer) VersionInfo(ctx context.Context, req *ZbEmpty) (*VersionDetails, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VersionInfo not implemented")
}
func (*UnimplementedZetabaseProviderServer) ModifySubIdentity(ctx context.Context, req *SubIdentityModify) (*ZbError, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifySubIdentity not implemented")
}
func (*UnimplementedZetabaseProviderServer) ListSubIdentities(ctx context.Context, req *SimpleRequest) (*SubIdentitiesList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSubIdentities not implemented")
}
func (*UnimplementedZetabaseProviderServer) RegisterNewIdentity(ctx context.Context, req *NewIdentityRequest) (*NewIdentityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterNewIdentity not implemented")
}
func (*UnimplementedZetabaseProviderServer) ConfirmNewIdentity(ctx context.Context, req *NewIdentityConfirm) (*ZbError, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmNewIdentity not implemented")
}
func (*UnimplementedZetabaseProviderServer) PutData(ctx context.Context, req *TablePut) (*ZbError, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutData not implemented")
}
func (*UnimplementedZetabaseProviderServer) PutDataMulti(ctx context.Context, req *TablePutMulti) (*ZbError, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutDataMulti not implemented")
}
func (*UnimplementedZetabaseProviderServer) CreateTable(ctx context.Context, req *TableCreate) (*ZbError, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTable not implemented")
}
func (*UnimplementedZetabaseProviderServer) GetData(ctx context.Context, req *TableGet) (*TableGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetData not implemented")
}
func (*UnimplementedZetabaseProviderServer) QueryData(ctx context.Context, req *TableQuery) (*TableGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryData not implemented")
}
func (*UnimplementedZetabaseProviderServer) QueryKeys(ctx context.Context, req *TableQuery) (*ListKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryKeys not implemented")
}
func (*UnimplementedZetabaseProviderServer) CreateUser(ctx context.Context, req *NewSubIdentityRequest) (*NewIdentityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedZetabaseProviderServer) SetPermission(ctx context.Context, req *PermissionsEntry) (*ZbError, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPermission not implemented")
}
func (*UnimplementedZetabaseProviderServer) LoginUser(ctx context.Context, req *AuthenticateUser) (*AuthenticateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginUser not implemented")
}
func (*UnimplementedZetabaseProviderServer) ListTables(ctx context.Context, req *ListTablesRequest) (*ListTablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTables not implemented")
}
func (*UnimplementedZetabaseProviderServer) ListKeys(ctx context.Context, req *ListKeysRequest) (*ListKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListKeys not implemented")
}
func (*UnimplementedZetabaseProviderServer) DeleteObject(ctx context.Context, req *DeleteSystemObjectRequest) (*ZbError, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteObject not implemented")
}

func RegisterZetabaseProviderServer(s *grpc.Server, srv ZetabaseProviderServer) {
	s.RegisterService(&_ZetabaseProvider_serviceDesc, srv)
}

func _ZetabaseProvider_VersionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZbEmpty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).VersionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/VersionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).VersionInfo(ctx, req.(*ZbEmpty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_ModifySubIdentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubIdentityModify)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).ModifySubIdentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/ModifySubIdentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).ModifySubIdentity(ctx, req.(*SubIdentityModify))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_ListSubIdentities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SimpleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).ListSubIdentities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/ListSubIdentities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).ListSubIdentities(ctx, req.(*SimpleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_RegisterNewIdentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewIdentityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).RegisterNewIdentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/RegisterNewIdentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).RegisterNewIdentity(ctx, req.(*NewIdentityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_ConfirmNewIdentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewIdentityConfirm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).ConfirmNewIdentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/ConfirmNewIdentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).ConfirmNewIdentity(ctx, req.(*NewIdentityConfirm))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_PutData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TablePut)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).PutData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/PutData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).PutData(ctx, req.(*TablePut))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_PutDataMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TablePutMulti)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).PutDataMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/PutDataMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).PutDataMulti(ctx, req.(*TablePutMulti))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_CreateTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TableCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).CreateTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/CreateTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).CreateTable(ctx, req.(*TableCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_GetData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TableGet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).GetData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/GetData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).GetData(ctx, req.(*TableGet))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_QueryData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TableQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).QueryData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/QueryData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).QueryData(ctx, req.(*TableQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_QueryKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TableQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).QueryKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/QueryKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).QueryKeys(ctx, req.(*TableQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewSubIdentityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).CreateUser(ctx, req.(*NewSubIdentityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_SetPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionsEntry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).SetPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/SetPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).SetPermission(ctx, req.(*PermissionsEntry))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_LoginUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticateUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).LoginUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/LoginUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).LoginUser(ctx, req.(*AuthenticateUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_ListTables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).ListTables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/ListTables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).ListTables(ctx, req.(*ListTablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_ListKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).ListKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/ListKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).ListKeys(ctx, req.(*ListKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetabaseProvider_DeleteObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSystemObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetabaseProviderServer).DeleteObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zbprotocol.ZetabaseProvider/DeleteObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetabaseProviderServer).DeleteObject(ctx, req.(*DeleteSystemObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZetabaseProvider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zbprotocol.ZetabaseProvider",
	HandlerType: (*ZetabaseProviderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VersionInfo",
			Handler:    _ZetabaseProvider_VersionInfo_Handler,
		},
		{
			MethodName: "ModifySubIdentity",
			Handler:    _ZetabaseProvider_ModifySubIdentity_Handler,
		},
		{
			MethodName: "ListSubIdentities",
			Handler:    _ZetabaseProvider_ListSubIdentities_Handler,
		},
		{
			MethodName: "RegisterNewIdentity",
			Handler:    _ZetabaseProvider_RegisterNewIdentity_Handler,
		},
		{
			MethodName: "ConfirmNewIdentity",
			Handler:    _ZetabaseProvider_ConfirmNewIdentity_Handler,
		},
		{
			MethodName: "PutData",
			Handler:    _ZetabaseProvider_PutData_Handler,
		},
		{
			MethodName: "PutDataMulti",
			Handler:    _ZetabaseProvider_PutDataMulti_Handler,
		},
		{
			MethodName: "CreateTable",
			Handler:    _ZetabaseProvider_CreateTable_Handler,
		},
		{
			MethodName: "GetData",
			Handler:    _ZetabaseProvider_GetData_Handler,
		},
		{
			MethodName: "QueryData",
			Handler:    _ZetabaseProvider_QueryData_Handler,
		},
		{
			MethodName: "QueryKeys",
			Handler:    _ZetabaseProvider_QueryKeys_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _ZetabaseProvider_CreateUser_Handler,
		},
		{
			MethodName: "SetPermission",
			Handler:    _ZetabaseProvider_SetPermission_Handler,
		},
		{
			MethodName: "LoginUser",
			Handler:    _ZetabaseProvider_LoginUser_Handler,
		},
		{
			MethodName: "ListTables",
			Handler:    _ZetabaseProvider_ListTables_Handler,
		},
		{
			MethodName: "ListKeys",
			Handler:    _ZetabaseProvider_ListKeys_Handler,
		},
		{
			MethodName: "DeleteObject",
			Handler:    _ZetabaseProvider_DeleteObject_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zbprotocol.proto",
}
